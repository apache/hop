#
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#

RegexEval.Name=Regex evaluation
RegexEval.Description=Regular expression Evaluation\nThis transform uses a regular expression to evaluate a field. It can also extract new fields out of an existing field with capturing groups.
RegexEval.Log.ErrorResultFieldMissing=Error result Field is missing
RegexEvalHelperDialog.ValueGroup.Label=Capture from value
RegexEvalHelperDialog.ErrorCompiling.Message=Error while trying to compile expression\:
RegexEvalHelperDialog.TestValues.Label=Values to test
RegexEvalDialog.ReplaceFields.Label=Replace previous fields
RegexEval.Log.ReadRow=Reading row \: 
RegexEvalDialog.Exception.CouldNotExecuteScript=Couldn''t execute this script\! Error\:
RegexEvalDialog.CaseInsensitive.Tooltip=CASE_INSENSITIVE to enables case-insensitive.\nBy default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched.\n Unicode-aware case-insensitive matching can be enabled by specifying the UNICODE_CASE flag in conjunction with this flag.\nCase-insensitive matching can also be enabled via the embedded flag expression (?i).
RegexEvalMeta.CheckResult.ConnectedTransformOK2=Transform is receiving info from other transforms.
RegexEvalHelperDialog.Value3.Label=Value3
RegexEvalDialog.Fields.Label=Capture Group Fields
RegexEvalMeta.CheckResult.ConnectedTransformOK=Transform is connected to previous one, receiving {0} fields
RegexEvalDialog.ColumnInfo.Nullif=Null If
RegexEval.Log.ErrorCaptureGroupFieldsMismatch=The number of capture groups in the regular expression ({0}) does not match the number of fields specified ({1})\!
RegexEvalDialog.UseVar.Label=Use variable substitution
RegexEvalMeta.CheckResult.ResultFieldnameOK=The result field name is specified.
RegexEvalDialog.ResultField.Label=Result field name
RegexEvalHelperDialog.EnterScript.Message=Regular expression is missing\!
RegexEvalMeta.CheckResult.ValueIsEmpty=Error\: value \#{0} is empty\!
"RegexEval.Log.ErrorInTransform=Error in transform \: {0}
RegexEvalDialog.DotAll.Tooltip=In dotall mode, the expression . matches any character, including a line terminator.\n By default this expression does not match line terminators.\nDotall mode can also be enabled via the embedded flag expression (?s).
RegexEvalHelperDialog.Script.Label=Please enter a new regular expression or modify.
RegexEvalDialog.ColumnInfo.Group=Group
RegexEvalMeta.CheckResult.NoResultFieldname=No result field name specified\!
RegexEvalDialog.ContentTab.TabTitle=Content
RegexEvalDialog.CanonEq.Label=Ignore differences in Unicode encodings
RegexEvalDialog.Matcher.Label=Field to evaluate
RegexEvalHelperDialog.Value2.Label=Value2
RegexEvalDialog.ColumnInfo.Length=Length
RegexEvalDialog.Exception.CouldNotExecuteScript2=General error executing script\:
RegexEvalDialog.TransformName.Label=transform name 
RegexEvalDialog.TestFailed.DialogMessage=Unable to get fields from previous transforms because of an error
RegexEvalDialog.ErrorGettingSample=Error getting samples
RegexEvalDialog.FailedToGetFields.DialogMessage=Unable to get fields from previous transforms because of an error
RegexEvalDialog.Exception.CouldNotGetFields=Couldn''t get fields from previous transforms, please connect all needed hops\!
RegexEvalDialog.ErrorDialog.Title=ERROR
RegexEvalHelperDialog.FieldsGroup=Capture group fields ({0})
RegexEvalDialog.AllowCaptureGroups.Label=Create fields for capture groups
RegexEval.Log.ErrorFindingField=Error finding field\: 
RegexEvalHelperDialog.Value1.Label=Value1
RegexEvalDialog.Unix.Tooltip=In this mode, only the '\n' line terminator is recognized in the behavior of ., ^, and $.\nnix lines mode can also be enabled via the embedded flag expression (?d).
RegexEval.Log.ErrorMatcherMissing=Error missing Field to evaluate
RegexEvalHelperDialog.Shell.Label=Regular expression evaluation
RegexEvalDialog.ColumnInfo.Decimal=Decimal
RegexEvalDialog.SamplesListe=Samples list
RegexEvalDialog.Unix.Label=Enables Unix lines mode
RegexEvalDialog.AllowCaptureGroups.Tooltip=Allows the creation of new fields based on the capture groups defined in the regex.
RegexEvalHelperDialog.EnterScript.Title=ERROR
RegexEvalDialog.ColumnInfo.Type=Type
RegexEval.Exception.ErrorResultFieldMissing=Error result Field is missing
RegexEvalDialog.ColumnInfo.Format=Format
RegexEvalDialog.ColumnInfo.Precision=Precision
RegexEvalDialog.ColumnInfo.Currency=Currency
RegexEvalDialog.Comment.Label=Permit whitespace and comments in pattern
RegexEvalMeta.CheckResult.ScriptCompiledOK2=Script executed without a problem
RegexEval.Exception.ErrorCaptureGroupFieldsMismatch=The number of capture groups in the regular expression ({0}) does not match the number of fields specified ({1})\!
RegexEval.Log.LineNumber=linenr 
RegexEvalDialog.UseVar.Tooltip=Use variable substitution
RegexEvalDialog.Unicode.Label=Enable Unicode-aware case folding
RegexEvalMeta.CheckResult.NoMatcher=Field to evaluate is missing\!
RegexEvalMeta.Exception.ResultFieldToReplaceNotFound=We cannot find result field to replace [{0}]
RegexEvalHelperDialog.GroupFields.Label=Captured fields
RegexEvalDialog.ResultField.Tooltip=Result Field Name to add to output stream
RegexEvalDialog.ColumnInfo.IfNull=Default
RegexEvalMeta.CheckResult.RetrievedValue=\ - Retrieved value {0} of type {1}
RegexEvalMeta.Exception.UnableToLoadTransformMetaFromXML=Unable to load transform info from XML
RegexEvalDialog.ReplaceFields.Tooltip=Replace any conflicting fields from previous transforms
RegexEvalDialog.Multiline.Tooltip=In multiline mode the expressions ^ and $ match just after or just before,\n respectively, a line terminator or the end of the input sequence.\n By default these expressions only match at the beginning and the end of the entire input sequence.\nMultiline mode can also be enabled via the embedded flag expression (?m).
RegexEvalMeta.CheckResult.MatcherOK=Field to evaluate is filled
RegexEvalDialog.Samples.Label=Samples
RegexEvalHelperDialog.ErrorCompiling.Title=ERROR
RegexEvalDialog.ColumnInfo.NewField=New field
RegexEval.Exception.CouldnotFindField=Couldn''t find field ''{0}'' in row\!
RegexEvalHelperDialog.EnterScript.Tiltle=ERROR
RegexEvalDialog.Javascript.Label=Regular expression \:
RegexEvalDialog.Exception.CouldNotCompileScript=Couldn''t compile this script\! Error\:
RegexEvalDialog.FailedToGetFields.DialogTitle=Unable to get fields
RegexEval.Log.ErrorInTransform=Error in transform
RegexEvalDialog.ColumnInfo.TrimType=Trim
RegexEvalDialog.CanonEq.Tooltip=CANON_EQ to ignore differences in Unicode encodings,\n unless you are sure your strings contain only US ASCII characters and you want to increase performance.
RegexEvalDialog.GeneralTab.TabTitle=Settings
RegexEvalDialog.Shell.Title=Regex evaluation
RegexEvalDialog.Script.Label=Regular expression  
RegexEvalDialog.TestScript.Label=Test regEx
RegexEvalDialog.Samples.Tooltip=Click here to display samples list
RegexEvalHelperDialog.ScriptSuccessfullyCompiled=The regular expression was successfully compiled.
RegexEvalMeta.CheckResult.NoInputReceived=No input received from other transforms\!
RegexEvalDialog.DotAll.Label=Enable dotall mode
RegexEvalDialog.Fields.Tooltip=Fields specified here will be populated (in order) by the capture groups defined in the Regex.
RegexEvalDialog.ErrorGettingSample.Exception=Error getting samples
RegexEvalDialog.CaseInsensitive.Label=Enables case-insensitive matching
RegexEvalDialog.Group.TransformSettings.Label=transform settings
RegexEvalMeta.CheckResult.CouldNotExecuteScript2=General error executing script\:
RegexEvalMeta.CheckResult.CouldNotGetFieldsFromPreviousTransform=Couldn''t get fields from previous transforms, please connect all needed hops\!
RegexEvalDialog.Unicode.Tooltip=When this flag is specified then case-insensitive matching,\n when enabled by the CASE_INSENSITIVE flag, is done in a manner consistent with the Unicode Standard.\n By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched.\nUnicode-aware case folding can also be enabled via the embedded flag expression (?u).
RegexEvalMeta.CheckResult.ErrorRetrievingValue=Error retrieving value {0}
RegexEvalDialog.Multiline.Label=Enable multiline mode
RegexEval.Exception.ErrorMatcherMissing=Error missing Field to evaluate
RegexEvalMeta.CheckResult.ScriptCompiledOK=Script compiled without a problem
RegexEvalDialog.Comment.Tooltip=In this mode, whitespace is ignored,\n and embedded comments starting with \# are ignored until the end of a line.\nComments mode can also be enabled via the embedded flag expression (?x).
RegexEvalMeta.CheckResult.FailedToGetValues=Trying to retrieve {0} fields\: 
RegexEvalMeta.CheckResult.CouldNotExecuteScript=Couldn''t execute this script\! Error\:
RegexEval.Log.Regexp=The regular expression is \: 
RegexEval.Log.ErrorStackTrace=Error stack trace\: 
RegexEvalDialog.SamplesListe.Title=Samples
RegexEvalDialog.CompiledScriptOK.DialogTitle=OK
RegexEvalHelperDialog.RegExTab.Label=Regular expression
