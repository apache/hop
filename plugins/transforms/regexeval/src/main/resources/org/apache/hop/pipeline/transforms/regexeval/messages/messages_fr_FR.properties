#
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#

RegexEval.Description=\u00C9valuation des expressions rationnelles (RegExp)\nCette transformation utilise une expression rationnelle pour \u00E9valuer un champ. Elle peut \u00E9galement extraire de nouveaux champs \u00E0 partir d'un champ existant avec des groupes de capture.
RegexEval.Exception.CouldnotFindField=Impossible de trouver le champ ''{0}'' dans le flux d''entre\u00E9\!
RegexEval.Exception.ErrorCaptureGroupFieldsMismatch=Le nombre de groupes \u00E0 capturer ({0})  est diff\u00E9rent du nombre de champs sp\u00E9cifi\u00E9e ({1})\!
RegexEval.Exception.ErrorMatcherMissing=Champ \u00E0 \u00E9valuer non renseign\u00E9\!
RegexEval.Exception.ErrorResultFieldMissing=Champ \u00E0 retourner non renseign\u00E9\!
RegexEval.Log.ErrorCaptureGroupFieldsMismatch=Le nombre de groupes \u00E0 capturer ({0})  est diff\u00E9rent du nombre de champs sp\u00E9cifi\u00E9e ({1})\!
RegexEval.Log.ErrorFindingField=Erreur r\u00E9cup\u00E9ration champ\: 
RegexEval.Log.ErrorInTransform=Apache Hop a rencontr\u00E9 une erreur lors de l''ex\u00E9cution de la transformation\!
RegexEval.Log.ErrorMatcherMissing=Champ \u00E0 \u00E9valuer non renseign\u00E9\!
RegexEval.Log.ErrorResultFieldMissing=Champ r\u00E9sultat non renseign\u00E9
RegexEval.Log.ReadRow=Lecture ligne \:
RegexEval.Log.Regexp=L''expression r\u00E9guli\u00E8re est \:
RegexEval.Name=Evaluation par exp reg
RegexEvalDialog.AllowCaptureGroups.Label=Activer capture groupes
RegexEvalDialog.AllowCaptureGroups.Tooltip=Cette option active la capture de groupes et permet ainsi\r\nde cr\u00E9er de nouveaux champs qui seront ajout\u00E9s au flux d''entr\u00E9e.
RegexEvalDialog.CanonEq.Label=Ignore differences in Unicode encodings
RegexEvalDialog.CanonEq.Tooltip=CANON_EQ to ignore differences in Unicode encodings,\n unless you are sure your strings contain only US ASCII characters and you want to increase performance.
RegexEvalDialog.CaseInsensitive.Label=Enables case-insensitive matching
RegexEvalDialog.CaseInsensitive.Tooltip=CASE_INSENSITIVE to enables case-insensitive.\nBy default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched.\n Unicode-aware case-insensitive matching can be enabled by specifying the UNICODE_CASE flag in conjunction with this flag.\nCase-insensitive matching can also be enabled via the embedded flag expression (?i).
RegexEvalDialog.ColumnInfo.Currency=Devise
RegexEvalDialog.ColumnInfo.Decimal=D\u00E9cimal
RegexEvalDialog.ColumnInfo.Format=Format
RegexEvalDialog.ColumnInfo.Group=Groupement
RegexEvalDialog.ColumnInfo.IfNull=D\u00E9faut
RegexEvalDialog.ColumnInfo.Length=Longueur
RegexEvalDialog.ColumnInfo.NewField=Nouveau champ
RegexEvalDialog.ColumnInfo.Nullif=Nulle si
RegexEvalDialog.ColumnInfo.Precision=Pr\u00E9cision
RegexEvalDialog.ColumnInfo.TrimType=Enlever espaces
RegexEvalDialog.ColumnInfo.Type=Type
RegexEvalDialog.Comment.Label=Permit whitespace and comments in pattern
RegexEvalDialog.Comment.Tooltip=In this mode, whitespace is ignored,\n and embedded comments starting with \# are ignored until the end of a line.\nComments mode can also be enabled via the embedded flag expression (?x).
RegexEvalDialog.ContentTab.TabTitle=Contenu
RegexEvalDialog.DotAll.Label=Enable dotall mode
RegexEvalDialog.DotAll.Tooltip=In dotall mode, the expression . matches any character, including a line terminator.\n By default this expression does not match line terminators.\nDotall mode can also be enabled via the embedded flag expression (?s).
RegexEvalDialog.FailedToGetFields.DialogMessage=Impossible de r\u00E9cup\u00E9r\u00E9r les champs depuis la transformation pr\u00E9c\u00E9dente
RegexEvalDialog.FailedToGetFields.DialogTitle=Impossible r\u00E9cup\u00E9rer les champs
RegexEvalDialog.Fields.Label=Champs issus de la capture
RegexEvalDialog.Fields.Tooltip=Les champs indiqu\u00E9s dans cette zone seront aliment\u00E9s (dans l''ordre) par les groupes\r\nd\u00E9finis dans l''expression r\u00E9guli\u00E8re. Ils seront ajout\u00E9s au flux d''entr\u00E9e.
RegexEvalDialog.GeneralTab.TabTitle=Param\u00E8tres
RegexEvalDialog.Group.TransformSettings.Label=Param\u00E8tres
RegexEvalDialog.Javascript.Label=Expression r\u00E9guli\u00E8re\:
RegexEvalDialog.Matcher.Label=Champ \u00E0 \u00E9valuer
RegexEvalDialog.Multiline.Label=Mode multilignes
RegexEvalDialog.Multiline.Tooltip=In multiline mode the expressions ^ and $ match just after or just before,\n respectively, a line terminator or the end of the input sequence.\n By default these expressions only match at the beginning and the end of the entire input sequence.\nMultiline mode can also be enabled via the embedded flag expression (?m).
RegexEvalDialog.ReplaceFields.Label=Remplacer champs en conflit
RegexEvalDialog.ReplaceFields.Tooltip=S\u00E9lectionnez cette option si vous souhaitez remplacer\r\nun champ du flux entrant s''il entre en confilt avec ceux\r\nd\u00E9finis au niveau de cette transformation.
RegexEvalDialog.ResultField.Label=Champ \u00E0 retourner
RegexEvalDialog.ResultField.Tooltip=champ \u00E0 retourner (bool\u00E9en). Ce champ sera ajout\u00E9 au flux de sortie
RegexEvalDialog.Script.Label=Expression r\u00E9guli\u00E8re  
RegexEvalDialog.Shell.Title=Evaluation par regex
RegexEvalDialog.TestScript.Label=Test regEx
RegexEvalDialog.TransformName.Label=Nom de la transformation
RegexEvalDialog.Unicode.Label=Enable Unicode-aware case folding
RegexEvalDialog.Unicode.Tooltip=When this flag is specified then case-insensitive matching,\n when enabled by the CASE_INSENSITIVE flag, is done in a manner consistent with the Unicode Standard.\n By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched.\nUnicode-aware case folding can also be enabled via the embedded flag expression (?u).
RegexEvalDialog.Unix.Label=Enables Unix lines mode
RegexEvalDialog.Unix.Tooltip=In this mode, only the '\n' line terminator is recognized in the behavior of ., ^, and $.\nnix lines mode can also be enabled via the embedded flag expression (?d).
RegexEvalDialog.UseVar.Label=Utiliser variables environnement
RegexEvalDialog.UseVar.Tooltip=Permettre l''utiliser des variables d''environnement\n \u00E0 l''int\u00E9rieur de l''expression r\u00E9guli\u00E8re.
RegexEvalHelperDialog.EnterScript.Message=Veuillez svp sp\u00E9cifier l'expression \u00E0 tester\!
RegexEvalHelperDialog.EnterScript.Title=Erreur
RegexEvalHelperDialog.ErrorCompiling.Message=Impossible de compiler l''expression\:
RegexEvalHelperDialog.FieldsGroup=Champs issus de la capture ({0})
RegexEvalHelperDialog.GroupFields.Label=Champs issus de la capture
RegexEvalHelperDialog.RegExTab.Label=Expression r\u00E9guli\u00E8re
RegexEvalHelperDialog.Script.Label=Saisissez ou modifier ci-dessous l''expression r\u00E9guli\u00E8re \u00E0 tester.
RegexEvalHelperDialog.ScriptSuccessfullyCompiled=L''expression r\u00E9guli\u00E8re a \u00E9t\u00E9 compil\u00E9 avec succ\u00E8s.
RegexEvalHelperDialog.Shell.Label=Evaluation expression r\u00E9guli\u00E8re
RegexEvalHelperDialog.TestValues.Label=Valeurs \u00E0 tester
RegexEvalHelperDialog.Value1.Label=Value1
RegexEvalHelperDialog.Value2.Label=Value2
RegexEvalHelperDialog.Value3.Label=Valeur3
RegexEvalHelperDialog.ValueGroup.Label=Valeur groupe
RegexEvalMeta.CheckResult.ConnectedTransformOK=La transformation est connect\u00E9e aux transformations pr\u00E9c\u00E9dentes et re\u00E7oit {0} champ(s)
RegexEvalMeta.CheckResult.MatcherOK=Le champ \u00E0 \u00E9valuer a \u00E9t\u00E9 renseign\u00E9
RegexEvalMeta.CheckResult.NoInputReceived=Aucun flux d''entr\u00E9e en provenance des autres transformations\!
RegexEvalMeta.CheckResult.NoMatcher=Le champ \u00E0 \u00E9valuer n''a pas \u00E9t\u00E9 sp\u00E9cifi\u00E9\!
RegexEvalMeta.CheckResult.NoResultFieldname=Le champ r\u00E9sultat n''a pas \u00E9t\u00E9 sp\u00E9cifi\u00E9\!
RegexEvalMeta.CheckResult.ResultFieldnameOK=Le champ r\u00E9sultat a \u00E9t\u00E9 sp\u00E9cifi\u00E9.
RegexEvalMeta.Exception.UnableToLoadTransformMetaFromXML=Impossible de r\u00E9cup\u00E9rer les informations de la transformation depuis le fichier XML
