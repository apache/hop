#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#








JdbcMetadata.arguments.catalog.Label=Catalog
JdbcMetadata.arguments.catalog.Tooltip=A catalog name; must match the catalog name as it is stored in the database
JdbcMetadata.arguments.columnNamePattern.Label=Column name pattern
JdbcMetadata.arguments.columnNamePattern.Tooltip=A column name pattern; must match the column name as it is stored in the database
JdbcMetadata.arguments.foreignCatalog.Label=Foreign catalog
JdbcMetadata.arguments.foreignCatalog.Tooltip=A catalog name; must match the catalog name as it is stored in the database
JdbcMetadata.arguments.foreignSchema.Label=Foreign schema
JdbcMetadata.arguments.foreignSchema.Tooltip=A schema name; must match the schema name as it is stored in the database
JdbcMetadata.arguments.foreignTable.Label=Foreign table
JdbcMetadata.arguments.foreignTable.Tooltip=A table name; must match the table name as it is stored in the database
JdbcMetadata.arguments.nullable.Label=Nullable?
JdbcMetadata.arguments.nullable.Tooltip=Include columns that are nullable
JdbcMetadata.arguments.parentCatalog.Label=Parent catalog
JdbcMetadata.arguments.parentCatalog.Tooltip=A catalog name; must match the catalog name as it is stored in the database
JdbcMetadata.arguments.parentSchema.Label=Parent schema
JdbcMetadata.arguments.parentSchema.Tooltip=A schema name; must match the schema name as it is stored in the database
JdbcMetadata.arguments.parentTable.Label=Parent table
JdbcMetadata.arguments.parentTable.Tooltip=A table name; must match the table name as it is stored in the database
JdbcMetadata.arguments.schema.Label=Schema
JdbcMetadata.arguments.schema.Tooltip=A schema name; must match the schema name as it is stored in the database
JdbcMetadata.arguments.schemaPattern.Label=Schema pattern
JdbcMetadata.arguments.schemaPattern.Tooltip=A schema pattern name; must match the schema name as it is stored in the database;
JdbcMetadata.arguments.scope.Label=Identity scope
JdbcMetadata.arguments.scope.Tooltip=The scope of interest
JdbcMetadata.arguments.table.Label=Table
JdbcMetadata.arguments.table.Tooltip=A table name; must match the table name as it is stored in the database
JdbcMetadata.arguments.tableNamePattern.Label=Table name pattern
JdbcMetadata.arguments.tableNamePattern.Tooltip=A table name pattern; may be a fully-qualified name
JdbcMetadata.arguments.tableTypes.Label=Table types
JdbcMetadata.arguments.tableTypes.Tooltip=A list of table types
JdbcMetadata.argumentSource.Label=Get arguments from fields?
JdbcMetadata.argumentSource.Tooltip=Check this if you want to acquire the values for the method arguments from the fields of the input stream
JdbcMetaData.CheckResult.ReceivingRows.ERROR=No input received from other transforms!
JdbcMetaData.CheckResult.ReceivingRows.OK=Transform is receiving input from other transforms.
JdbcMetadata.FieldName.Label=Field name
JdbcMetadata.FieldName.Tooltip=The name of the output field as it is returned by the metadata method
JdbcMetadata.FieldsTab.Label=Output fields
JdbcMetadata.FieldsTab.Tooltip=Use this tab to define which metadata fields you want to add to the outputstream
JdbcMetadata.getFieldsButton.Label=Get fields
JdbcMetadata.getFieldsButton.Tooltip=Click to retrieve all possible output fields for the current metadata method
JdbcMetaData.keyword=Utility,JDBC Metadata
JdbcMetadata.metadataMethod.Label=Metadata method
JdbcMetadata.metadataMethod.Tooltip=This specifies the kind of metadata to retrieve.
JdbcMetadata.MetaDataTab.Label=Method and arguments
JdbcMetadata.MetaDataTab.Tooltip=Use this tab to specify the kind of metadata and any required parameters
JdbcMetadata.methods.getBestRowIdentifier=Best row identifier
JdbcMetadata.methods.getCatalogs=Catalogs
JdbcMetadata.methods.getColumnPrivileges=Column privileges
JdbcMetadata.methods.getColumns=Columns
JdbcMetadata.methods.getCrossReference=Cross references
JdbcMetadata.methods.getExportedKeys=Exported key columns
JdbcMetadata.methods.getImportedKeys=Foreign key columns
JdbcMetadata.methods.getPrimaryKeys=Primary key columns
JdbcMetadata.methods.getSchemas=Schemas
JdbcMetadata.methods.getTablePrivileges=Table privileges
JdbcMetadata.methods.getTables=Tables
JdbcMetadata.methods.getTableTypes=Table types
JdbcMetadata.methods.getTypeInfo=Data types
JdbcMetadata.methods.getVersionColumns=Version columns
JdbcMetadata.Name=Get JDBC Metadata
JdbcMetadata.Name.Description=Get JDBC Metadata
JdbcMetadata.OutputFieldName.Label=Rename to
JdbcMetadata.OutputFieldName.Tooltip=The custom name for this output field
JdbcMetadata.passRow.Label=Always pass the input row?
JdbcMetadata.passRow.Tooltip=Check this if you want to pass the input row even if no metadata was found. (Metadata output fields will be null in this case)
JdbcMetadata.removeArgumentFields.Label=Remove argument fields?
JdbcMetadata.removeArgumentFields.Tooltip=Check this if you do not want to pass on the  method argument fields to the output stream
