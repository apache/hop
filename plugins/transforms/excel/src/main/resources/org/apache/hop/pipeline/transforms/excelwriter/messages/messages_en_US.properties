#
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#



  Are you sure you want to continue?
ExcelWriter.Log.ParentFolderCreated=Folder [{0}] was created.
ExcelWriter.Log.ParentFolderExist=Parent folder exists [{0}]!
ExcelWriter.Log.ParentFolderNotExist=We can not find parent folder [{0}]!
ExcelWriter.Log.ParentFolderNotExistCreateIt=We can not find folder [{0}]! You need to create it before generating file [{1}].
ExcelWriterDialog.AddDate.Label=Include date in filename?
ExcelWriterDialog.AddFileToResult.Label=Add filenames to result
ExcelWriterDialog.AddFileToResult.Tooltip=Check this if you wan to add filenames to result filenames.
ExcelWriterDialog.AddTime.Label=Include time in filename? 
ExcelWriterDialog.AddTransformnr.Label=Include transform nr in filename? 
ExcelWriterDialog.AppendLines.Label=Start writing at end of sheet (appending lines)
ExcelWriterDialog.AppendLines.Tooltip=If checked the output begins after the last defined row of the existing excel sheet 
ExcelWriterDialog.AutoSize.Label=Auto size columns
ExcelWriterDialog.AutoSize.Tooltip=Automatically size all columns to largest value. This may be slow on large sheets. VMs in headless mode may have to define the java.awt.headless property\: System.setProperty("java.awt.headless", "true"); or java -Djava.awt.headless\=true in order for this to work.  
ExcelWriterDialog.CommentAuthor.Column=Cell comment author (XLSX)
ExcelWriterDialog.CommentField.Column=Cell comment (XLSX)
ExcelWriterDialog.ContentGroup.Label=Content options
ExcelWriterDialog.ContentTab.TabTitle=Content
ExcelWriterDialog.CreateParentFolder.Label=Create parent folder
ExcelWriterDialog.CreateParentFolder.Tooltip=Check this if you want to create parent folder\n when necessary. Otherwise, Apache Hop will throw an exception when parent folder doesn''t exist.
ExcelWriterDialog.DateTimeFormat.Label=Date time format
ExcelWriterDialog.DialogTitle=Microsoft Excel writer
ExcelWriterDialog.DoNotOpenNewFileInit.Label=Wait for first row before creating file
ExcelWriterDialog.DoNotOpenNewFileInit.Tooltip=Check this if you don''t want to create file when the pipeline starts.\n Apache Hop will create file at first row received.
ExcelWriterDialog.EmptyRows.Label=Begin by writing ... empty lines
ExcelWriterDialog.EmptyRows.Tooltip=When writing to an existing sheet you may choose to write a few empty lines first. This is useful if you want to append rows to an existing sheet, but offset them to clearly see the bounds of each generated block of rows.
ExcelWriterDialog.Extension.Tooltip=This is the file extension of the Excel file. It also implies the file format. 
ExcelWriterDialog.FailedToGetFields.DialogMessage=We can not get fields name from previous transforms\!
ExcelWriterDialog.FailedToGetFields.DialogTitle=Error
ExcelWriterDialog.fieldGroup.Label=Fields
ExcelWriterDialog.fileGroup.Label=File
ExcelWriterDialog.Filename.Label=Filename 
ExcelWriterDialog.Filename.Tooltip=This is the Excel filename that the rows will be written to
ExcelWriterDialog.FileNameField.Label=Filename field
ExcelWriterDialog.FileNameInField.Label=Accept filename from field?
ExcelWriterDialog.FileTab.TabTitle=File
ExcelWriterDialog.Footer.Label=Write Footer 
ExcelWriterDialog.Footer.Tooltip=Writes the field names (or field titles if specified) as the last row of the output.
ExcelWriterDialog.ForceFormulaRecalculation.Label=Force formula recalculation
ExcelWriterDialog.ForceFormulaRecalculation.Tooltip=Check this if you want Hop to evaluate all of the workbook formulas when done. This is useful if you find that Excel is displaying cached (and thus wrong) values in formula fields. 
ExcelWriterDialog.FormatColumn.Column=Format
ExcelWriterDialog.FormatXLS.Label=xls [Excel 97 and above]
ExcelWriterDialog.FormatXLSX.Label=xlsx [Excel 2007 and above]
ExcelWriterDialog.FormulaField.Column=Field contains formula
ExcelWriterDialog.Header.Label=Write Header 
ExcelWriterDialog.Header.Tooltip=Writes the field names (or field titles if specified) as the first row of the output.
ExcelWriterDialog.HyperLinkField.Column=Hyperlink
ExcelWriterDialog.IfFileExists.CreateNew.Label=Replace with new output file
ExcelWriterDialog.IfFileExists.Label=If output file exists
ExcelWriterDialog.IfFileExists.Reuse.Label=Use existing file for writing
ExcelWriterDialog.IfFileExists.Tooltip=Specifies what to do when the output file exists. You may choose to delete it and replace it with a fresh file or reuse the existing file for writing.
ExcelWriterDialog.IfSheetExists.CreateNew.Label=Replace with new sheet
ExcelWriterDialog.IfSheetExists.Label=If sheet exists in output file
ExcelWriterDialog.IfSheetExists.Reuse.Label=write to existing sheet
ExcelWriterDialog.IfSheetExists.Tooltip=If the sheet exists in the file you may choose to delete it and replace it with a fresh sheet or reuse the existing sheet for writing.
ExcelWriterDialog.LeaveExistingStylesUnchanged.Label=Leave styles of existing cells unchanged
ExcelWriterDialog.LeaveExistingStylesUnchanged.Tooltip=This setting will leave all styles of existing cells in your template alone. This can be useful if you got specifically preformatted area in your sheet where you just want to replace the data, leaving all style information unchanged (like borders, background color etc.).
ExcelWriterDialog.Load.SchemaDefinition.Message=The schema definition {0} is going to be loaded. All fields will be reset to the set of fields in the schema definition.\
ExcelWriterDialog.Load.SchemaDefinition.Title=Schema definition
ExcelWriterDialog.MakeActiveSheet.Label=Make this the active sheet
ExcelWriterDialog.MakeActiveSheet.Tooltip=If checked the output sheet is going to be the active sheet (i.e. first sheet you see when opening the document) in the file. If not checked any previously active sheet will continue to be the active sheet of the file.
ExcelWriterDialog.ManualSchemaDefinition.Label=Define fields schema:
ExcelWriterDialog.MinWidth.Button=\ &Minimal width
ExcelWriterDialog.MinWidth.Tooltip=Sets the output to non-padded width.
ExcelWriterDialog.NameColumn.Column=Name
ExcelWriterDialog.NoFilesFound.DialogMessage=No files found\!  Please check the filename/directory and options.
ExcelWriterDialog.OmitHeader.Label=Omit header
ExcelWriterDialog.OmitHeader.Tooltip=You may choose to not write a header if you are writing to an existing sheet. This is useful if you want to generate new files with header, but do not want to repeat the header in subsequent runs, where you append to the same file.
ExcelWriterDialog.OutputFieldsTab.TabTitle=Output fields
ExcelWriterDialog.Password.Label=Password
ExcelWriterDialog.Password.Tooltip=Password to protect the sheet
ExcelWriterDialog.ProtectedBy.Label=Protected by user
ExcelWriterDialog.ProtectedBy.Tooltip=The name of the user protecting the sheet
ExcelWriterDialog.ProtectSheet.Label=Protect sheet? (XLS format only)
ExcelWriterDialog.ProtectSheet.Tooltip=Lock the sheet for modification by setting a password
ExcelWriterDialog.RowWritingMethod.Label=When writing rows
ExcelWriterDialog.RowWritingMethod.Overwrite.Label=overwrite existing cells
ExcelWriterDialog.RowWritingMethod.PushDown.Label=shift existing cells down
ExcelWriterDialog.RowWritingMethod.Tooltip=When writing rows you can choose to write into existing rows or to push down existing content down first. This may be useful when trying to preserve a custom footer from a template sheet for example.
ExcelWriterDialog.SchemaDefinition.Label=Schema definition
ExcelWriterDialog.SchemaDefinition.Tooltip=Select the schema definition you want to apply to incoming/outgoing rows
ExcelWriterDialog.SelectOutputFiles.DialogMessage=Output file(s)\:
ExcelWriterDialog.SelectOutputFiles.DialogTitle=Output files
ExcelWriterDialog.SheeTemplateTab.TabTitle=Sheet && Template
ExcelWriterDialog.sheetGroup.Label=Sheet
ExcelWriterDialog.Sheetname.Label=Sheet name (max. 31 characters)
ExcelWriterDialog.Sheetname.Tooltip=The name of the sheet that will used for writing data.
ExcelWriterDialog.ShowFiles.Button=&Show filename(s)...
ExcelWriterDialog.SkipRows.Label=Offset by ... rows
ExcelWriterDialog.SkipRows.Tooltip=You can choose to move the starting output row by a positive or negative number. It may be useful to specify a negative offset if you want to append to an existing sheet, but keep existing custom footer lines at the bottom of the sheet. 
ExcelWriterDialog.SpecifyFormat.Label=Specify Date time format
ExcelWriterDialog.SpecifyFormat.Tooltip=Specify Date time format
ExcelWriterDialog.SplitEvery.Label=Split every ... data rows
ExcelWriterDialog.SplitEvery.Tooltip=Enter a positive number to create a new output file every ... data rows. The files will be numbered.
ExcelWriterDialog.StartingCell.Label=Start writing at cell
ExcelWriterDialog.StartingCell.Tooltip=Enter cell reference to start writing at, i.e. B2
ExcelWriterDialog.StreamData.Label=Stream XSLX data
ExcelWriterDialog.Template.Label=Use template when creating new files
ExcelWriterDialog.Template.Tooltip=When a new output file is required and this is checked, the template file from below will be copied instead of creating an empty file.
ExcelWriterDialog.TemplateFilename.Label=Template file
ExcelWriterDialog.TemplateGroup.Label=Template
ExcelWriterDialog.TemplateSheet.Label=Use template when creating new sheets
ExcelWriterDialog.TemplateSheet.Tooltip=When a new output sheet is required and this is checked, the template sheet from below will be cloned instead of creating an empty sheet. A template sheet must not contain complex graphics or charts, as they may get lost or cause errors when cloned. Other content and formatting should be fine.  
ExcelWriterDialog.TemplateSheetHide.Label=Hide Template Sheet
ExcelWriterDialog.TemplateSheetHide.Tooltip=Ensure that the template sheet will be hidden
ExcelWriterDialog.TemplateSheetname.Label=Template sheet
ExcelWriterDialog.TitleColumn.Column=Field title
ExcelWriterDialog.TypeColumn.Column=Type
ExcelWriterDialog.UseStyleCell.Column=Style from cell
ExcelWriterDialog.UseTitleStyleCell.Column=Header/footer style from cell
ExcelWriterDialog.writeToExistingGroup.Label=When writing to existing sheet
ExcelWriterMeta.Injection.AddToResultFilenames.Field=Add filenames to result?
ExcelWriterMeta.Injection.AppendEmpty.Field=Begin by writing ... empty lines
ExcelWriterMeta.Injection.AppendLines.Field=Append lines at the end of sheet?
ExcelWriterMeta.Injection.AppendOffset.Field=Offset by ... rows
ExcelWriterMeta.Injection.AppendOmitHeader.Field=Omit header?
ExcelWriterMeta.Injection.AutoSizeColums.Field=Auto size columns
ExcelWriterMeta.Injection.CreateParentFolder.Field=Create parent folder
ExcelWriterMeta.Injection.DateInFilename.Field=Include date in filename?
ExcelWriterMeta.Injection.DateTimeFormat.Field=Date time format field
ExcelWriterMeta.Injection.DoNotOpenNewFileInit.Field=Wait for first row before creating new file?
ExcelWriterMeta.Injection.Extension.Field=Extension (xls/xlsx)
ExcelWriterMeta.Injection.Field=Field
ExcelWriterMeta.Injection.Fields=Fields
ExcelWriterMeta.Injection.FileName.Field=Filename
ExcelWriterMeta.Injection.FilenameField.Field=Filename field
ExcelWriterMeta.Injection.FilenameInField.Field=Filename in field?
ExcelWriterMeta.Injection.FooterEnabled.Field=Write footer?
ExcelWriterMeta.Injection.ForceFormulaRecalculation.Field=Force formula recalculation?
ExcelWriterMeta.Injection.HeaderEnabled.Field=Write header?
ExcelWriterMeta.Injection.IfFileExists.Field=If output file exists (reuse/new)?
ExcelWriterMeta.Injection.IfSheetExists.Field=If sheet exists in output file (reuse/new)?
ExcelWriterMeta.Injection.LeaveExistingStylesUnchanged.Field=Leave styles of existing cells unchanged?
ExcelWriterMeta.Injection.MakeSheetActive.Field=Make this the active sheet?
ExcelWriterMeta.Injection.Output.Comment.Field=Cell comment (XLSX)
ExcelWriterMeta.Injection.Output.CommentAuthor.Field=Cell comment author (XLSX)
ExcelWriterMeta.Injection.Output.FieldContainFormula.Field=Field contains formula?
ExcelWriterMeta.Injection.Output.FieldName.Field=Field name
ExcelWriterMeta.Injection.Output.Format.Field=Format
ExcelWriterMeta.Injection.Output.Hyperlink.Field=Hyperlink
ExcelWriterMeta.Injection.Output.StyleCell.Field=Style from cell
ExcelWriterMeta.Injection.Output.Title.Field=Field title
ExcelWriterMeta.Injection.Output.TitleStyleCell.Field=Header/footer style from cell
ExcelWriterMeta.Injection.Output.Type.Field=Type
ExcelWriterMeta.Injection.Password.Field=Password
ExcelWriterMeta.Injection.ProtectedBy.Field=Protected by user
ExcelWriterMeta.Injection.ProtectSheet.Field=Protect sheet (XLS format only)?
ExcelWriterMeta.Injection.RowWritingMethod.Field=Row writing method (overwrite/pus)
ExcelWriterMeta.Injection.SchemaDefinition.Field=Schema definition
ExcelWriterMeta.Injection.SheetName.Field=Sheet name
ExcelWriterMeta.Injection.SpecifyFormat.Field=Specify date/time format?
ExcelWriterMeta.Injection.SplitEvery.Field=Split every ... data rows
ExcelWriterMeta.Injection.StartingCell.Field=Start writing at cell
ExcelWriterMeta.Injection.StreamingData.Field=Stream XLSX data?
ExcelWriterMeta.Injection.TemplateEnabled.Field=Use template when creating new files?
ExcelWriterMeta.Injection.TemplateFileName.Field=Template file
ExcelWriterMeta.Injection.TemplateSheetEnabled.Field=Use template when creating new sheets?
ExcelWriterMeta.Injection.TemplateSheetHidden.Field=Hide template sheet?
ExcelWriterMeta.Injection.TemplateSheetName.Field=Template sheet name
ExcelWriterMeta.Injection.TimeInFilename.Field=Include time in filename?
ExcelWriterMeta.Injection.TransformNrInFilename.Field=Include transform split nr in filename?
ExcelWriterMeta.Tab.Sheetname.Text=Sheet1
ExcelWriterTransform.Exception.CouldNotPrepareFile=Could not prepare output file {0}
ExcelWriterTransform.Exception.FilenameFromFieldNotSupportedInBeam=Getting the filename from a field is not support when running in Beam.
ExcelWriterTransform.Exception.MaxSheetName=Sheet name exceeds 31 character: {0}
ExcelWriterTransform.Exception.TemplateNotFound=Template Sheet: {0} not found, aborting
ExcelWriterTransform.Log.CouldNotDeleteStaleFile=Could not delete stale file [{0}]\!
ExcelWriterTransform.Log.FileOpened=File [{0}] was opened.
ExcelWriterTransform.Log.OpeningFile=Opening file [{0}] ...
ExcelWriterTransform.Log.SetDataFormat=Set the data format: [{0}] to the cell {1}{2}.
ExcelWriterTransform.Log.TemplateMissing=We can not find template file [{0}]\!
ExcelWriterTransformMeta.CheckResult.AllFieldsFound=All output fields are found in the input stream.
ExcelWriterTransformMeta.CheckResult.ExpectedInputError=No input received from other transforms\!
ExcelWriterTransformMeta.CheckResult.ExpectedInputOk=Transform is receiving info from other transforms.
ExcelWriterTransformMeta.CheckResult.FieldsNotFound=Fields that were not found in input stream\:\n\n{0}
ExcelWriterTransformMeta.CheckResult.FieldsReceived=Transform is connected to previous one, receiving {0} fields
ExcelWriterTransformMeta.CheckResult.FilenameFieldNotFound=Filename field ''{0}'' not found in input stream.
ExcelWriterTransformMeta.CheckResult.FilesNotChecked=File specifications are not checked.
ExcelWriterTransformMeta.keyword=excel,writer,transform
TypeExitExcelWriterTransform.Description=Writes or appends data to an Excel file
TypeExitExcelWriterTransform.Name=Microsoft Excel writer
