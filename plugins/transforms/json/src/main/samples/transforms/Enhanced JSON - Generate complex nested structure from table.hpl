<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>Enhanced JSON - Generate complex nested structure from table</name>
    <name_sync_with_filename>Y</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <parameters>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2021/01/03 09:01:40.388</created_date>
    <modified_user>-</modified_user>
    <modified_date>2021/01/03 09:01:40.388</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
    <notepad>
      <note>This sample gets a table of values and generate a complex nested structure as output
by looping over a predefined key. Second Enhanced JSON Transform als gets a JSON fragment produced
by furst Enhanced JSON Transform and use it as value of an attribute of the resulting final 
JSON stream.</note>
      <xloc>144</xloc>
      <yloc>160</yloc>
      <width>559</width>
      <heigth>74</heigth>
      <fontname>Segoe UI</fontname>
      <fontsize>9</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>14</fontcolorred>
      <fontcolorgreen>58</fontcolorgreen>
      <fontcolorblue>90</fontcolorblue>
      <backgroundcolorred>201</backgroundcolorred>
      <backgroundcolorgreen>232</backgroundcolorgreen>
      <backgroundcolorblue>251</backgroundcolorblue>
      <bordercolorred>14</bordercolorred>
      <bordercolorgreen>58</bordercolorgreen>
      <bordercolorblue>90</bordercolorblue>
    </notepad>
  </notepads>
  <order>
    <hop>
      <from>Data grid</from>
      <to>Sort rows</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Sort rows</from>
      <to>Intermediate Structures</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Intermediate Structures</from>
      <to>Final Complex Data structure</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <transform>
    <name>Data grid</name>
    <type>DataGrid</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>field1</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>field2</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>field3</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
    </fields>
    <data>
      <line>
        <item>A</item>
        <item>B</item>
        <item>1</item>
      </line>
      <line>
        <item>A</item>
        <item>B</item>
        <item>2</item>
      </line>
      <line>
        <item>B</item>
        <item>C</item>
        <item>1</item>
      </line>
      <line>
        <item>B</item>
        <item>C</item>
        <item>2</item>
      </line>
      <line>
        <item>B</item>
        <item>D</item>
        <item>4</item>
      </line>
      <line>
        <item>C</item>
        <item>F</item>
        <item>5</item>
      </line>
      <line>
        <item>C</item>
        <item>F</item>
        <item>6</item>
      </line>
      <line>
        <item>C</item>
        <item>V</item>
        <item>6</item>
      </line>
      <line>
        <item>C</item>
        <item>B</item>
        <item>7</item>
      </line>
    </data>
    <attributes/>
    <GUI>
      <xloc>224</xloc>
      <yloc>256</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Final Complex Data structure</name>
    <type>EnhancedJsonOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <outputValue>details</outputValue>
    <jsonBloc>results</jsonBloc>
    <operation_type>outputvalue</operation_type>
    <use_arrays_with_single_instance>N</use_arrays_with_single_instance>
    <json_prittified>N</json_prittified>
    <encoding>UTF-8</encoding>
    <addtoresult>N</addtoresult>
    <file>
      <name/>
      <split_output_after>0</split_output_after>
      <extention>js</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <create_parent_folder>N</create_parent_folder>
      <doNotOpenNewFileInit>N</doNotOpenNewFileInit>
    </file>
    <additional_fields>
      <json_size_field/>
    </additional_fields>
    <key_fields>
    </key_fields>
    <fields>
      <field>
        <name>field1</name>
        <element>campo1</element>
        <json_fragment>N</json_fragment>
        <remove_if_blank>N</remove_if_blank>
      </field>
      <field>
        <name>field2</name>
        <element>campo2</element>
        <json_fragment>N</json_fragment>
        <remove_if_blank>N</remove_if_blank>
      </field>
      <field>
        <name>lvl1Details</name>
        <element>details</element>
        <json_fragment>Y</json_fragment>
        <remove_if_blank>N</remove_if_blank>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>688</xloc>
      <yloc>256</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Intermediate Structures</name>
    <type>EnhancedJsonOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <outputValue>lvl1Details</outputValue>
    <jsonBloc/>
    <operation_type>outputvalue</operation_type>
    <use_arrays_with_single_instance>N</use_arrays_with_single_instance>
    <json_prittified>Y</json_prittified>
    <encoding>UTF-8</encoding>
    <addtoresult>N</addtoresult>
    <file>
      <name/>
      <split_output_after>0</split_output_after>
      <extention>js</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <create_parent_folder>N</create_parent_folder>
      <doNotOpenNewFileInit>N</doNotOpenNewFileInit>
    </file>
    <additional_fields>
      <json_size_field/>
    </additional_fields>
    <key_fields>
      <key_field>
        <key_field_name>field1</key_field_name>
        <key_field_element>key2</key_field_element>
      </key_field>
      <key_field>
        <key_field_name>field2</key_field_name>
        <key_field_element>key2</key_field_element>
      </key_field>
    </key_fields>
    <fields>
      <field>
        <name>field3</name>
        <element>campo3</element>
        <json_fragment>N</json_fragment>
        <remove_if_blank>N</remove_if_blank>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>528</xloc>
      <yloc>256</yloc>
    </GUI>
  </transform>
  <transform>
    <name>Sort rows</name>
    <type>SortRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <directory>${java.io.tmpdir}</directory>
    <prefix>out</prefix>
    <sort_size>1000000</sort_size>
    <free_memory/>
    <compress>N</compress>
    <compress_variable/>
    <unique_rows>N</unique_rows>
    <fields>
      <field>
        <name>field1</name>
        <ascending>N</ascending>
        <case_sensitive>N</case_sensitive>
        <collator_enabled>N</collator_enabled>
        <collator_strength>0</collator_strength>
        <presorted>N</presorted>
      </field>
      <field>
        <name>field2</name>
        <ascending>Y</ascending>
        <case_sensitive>N</case_sensitive>
        <collator_enabled>N</collator_enabled>
        <collator_strength>0</collator_strength>
        <presorted>N</presorted>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>368</xloc>
      <yloc>256</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes/>
</pipeline>
