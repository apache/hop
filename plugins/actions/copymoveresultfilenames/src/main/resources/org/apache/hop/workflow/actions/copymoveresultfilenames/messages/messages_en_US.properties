#
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#

ActionCopyMoveResultFilenames.Name=Process result filenames
ActionCopyMoveResultFilenames.Description=Copy, move or delete result filenames
ActionCopyMoveResultFilenames.AddedFileToResult=Filename [{0}] was added to result filenames.
ActionCopyMoveResultFilenames.SpecifyWildcard.Tooltip=Only copy or move filenames that match regular expressions wildcard\n and don''t match ''exclude wildcard''
ActionCopyMoveResultFilenames.SuccessCondition.Label=Success condition 
ActionCopyMoveResultFilenames.WildcardExclude.Label=Exclude wildcard (RegExp)
ActionCopyMoveResultFilenames.AddDestinationFilename.Label=Add destination filename to result
ActionCopyMoveResultFilenames.log.MovedFile={0} was moved to {1}
ActionCopyMoveResultFilenames.Error=Error \: {0}
ActionCopyMoveResultFilenames.AddDate.Tooltip=Add date to filename
ActionCopyMoveResultFilenames.Log.FolderExists=Folder [{0}] exists.
ActionCopyMoveResultFilenames.CanNotLoadFromXML=Unable to load action of type 'copy move resultfilenames' from XML node
ActionCopyMoveResultFilenames.Name.Default=Copy Move Result Filenames
ActionCopyMoveResultFilenames.Delete.Label=Delete
ActionCopyMoveResultFilenames.Title=Process result filenames
ActionCopyMoveResultFilenames.AddDestinationFilename.Tooltip=Add destination filename to result filenames\nafter the copy/move process.
ActionCopyMoveResultFilenames.SpecifyFormat.Tooltip=Specify Date time format
ActionCopyMoveResultFilenames.Log.CanNotCreatedFolder=We can not create folder [{0}]. Exception \: {1} 
ActionCopyMoveResultFilenames.IgnoreRestOfFiles.Label=Ignore rest of files
ActionCopyMoveResultFilenames.CanNotDeletedFile=Can not delete file [{0}]\!
ActionCopyMoveResultFilenames.Copy.Label=Copy
ActionCopyMoveResultFilenames.AddDate.Label=Add date to filename
ActionCopyMoveResultFilenames.Foldername.Label=Destination folder
ActionCopyMoveResultFilenames.log.IgnoringFile=Ignoring file [{0}]...
ActionCopyMoveResultFilenames.Name.Label=Action name\: 
ActionCopyMoveResultFilenames.NrErrorsLessThan.Label=Nr errors lesser than
ActionCopyMoveResultFilenames.RemovedFileFromResult=Filename [{0}] was removed from result filenames.
ActionCopyMoveResultFilenames.SuccessWhenAllWorksFine.Label=Success when all works fine
ActionCopyMoveResultFilenames.Log.ErrorProcessing=Error processing files. Exception \: {0}
ActionCopyMoveResultFilenames.Log.FileExists=File [{0}] exists\!
ActionCopyMoveResultFilenames.Wildcard.Label=Wildcard (RegExp)
ActionCopyMoveResultFilenames.AddDateBeforeExtension.Tooltip=If you select this option, PDI will add date (and time) before file extension.\nThe extension will be considered starting from the last ''.'' found.
ActionCopyMoveResultFilenames.RemovedSourceFilename.Label=Remove source filenames from result
ActionCopyMoveResultFilenames.SpecifyFormat.Label=Specify Date time format
ActionCopyMoveResultFilenames.Log.FolderCreated=Folder [{0}] was successfully created.
ActionCopyMoveResultFilenames.SuccessWhenErrorsLessThan.Label=Success when number of errors lesser than 
ActionCopyMoveResultFilenames.CreateDestinationFolder.Tooltip=Create destination folder if needed
ActionCopyMoveResultFilenames.AddTime.Label=Add time to filename
ActionCopyMoveResultFilenames.log.FilesFound={0} file(s) was(were) found in result filenames
ActionCopyMoveResultFilenames.log.CopiedFile={0} was copied to {1}
ActionCopyMoveResultFilenames.Log.FolderNotExists=We can not find folder [{0}] \!
ActionCopyMoveResultFilenames.Group.LimitTo.Label=Limit to
ActionCopyMoveResultFilenames.Action.Label=Action 
ActionCopyMoveResultFilenames.OverwriteFile.Tooltip=When the destination file exists,If you want to replace it check this option.\nOtherwise, PDI will ignore it.
ActionCopyMoveResultFilenames.log.ErrorCanNotFindFile=We can not find file [{0}]
ActionCopyMoveResultFilenames.SuccessWhenAtLeat.Label=Success when at least x files processed
ActionCopyMoveResultFilenames.Error.SuccessConditionbroken=Success condition was broken\! We have {0} error(s)
ActionCopyMoveResultFilenames.AddDateBeforeExtension.Label=Add date before extension
ActionCopyMoveResultFilenames.AddTime.Tooltip=Add time to filename
ActionCopyMoveResultFilenames.Wildcard.Tooltip=Regular expressions wildcard
ActionCopyMoveResultFilenames.WildcardExclude.Tooltip=Regular expressions wildcard to exclude
ActionCopyMoveResultFilenames.SuccessOn.Group.Label=Success On
ActionCopyMoveResultFilenames.NrErrorsLessThan.Tooltip=Success when Number of errors is lesser than
ActionCopyMoveResultFilenames.OverwriteFile.Label=Replace existing file
ActionCopyMoveResultFilenames.IgnoreRestOfFiles.Tooltip=If you check this option, PDI will not process files left\nif success condition is broken
ActionCopyMoveResultFilenames.CreateDestinationFolder.Label=Create destination folder
ActionCopyMoveResultFilenames.RemovedSourceFilename.Tooltip=Remove source filenames from result filenames\nafter the copy/move process.
ActionCopyMoveResultFilenames.SpecifyWildcard.Label=Limit action to 
ActionCopyMoveResultFilenames.Move.Label=Move
ActionDeleteResultFilenames.Name.Default=Copy Move result filenames
ActionCopyMoveResultFilenames.log.DeletedFile=File [{0}] was deleted
ActionCopyMoveResultFilenames.DateTimeFormat.Label=Date time format
