#
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#

ActionPGPEncryptFiles.Name=Encrypt files with PGP
ActionPGPEncryptFiles.Description=Encrypt files with PGP (Pretty Good Privacy).\nThis action need GnuPG to work properly.
JobPGPEncryptFiles.Unique_Name_IfFileExists.Label=Create file with unique name
GPG.ExceptionWait=Exception at waitfor\!
JobPGPEncryptFiles.Log.Error.GettingMoveToFolder=We can not get file object for folder [{0}]. Exception \: [{1}]
JobPGPEncryptFiles.Simulate.Label=Simulate
JobPGPEncryptFiles.AddTime.Tooltip=Add time to filename
JobPGPEncryptFiles.BrowseFolders.Label=Folder...
JobPGPEncryptFiles.AddMovedDateBeforeExtension.Tooltip=Add date before extension
JobPGPEncryptFiles.NrErrorsLessThan.Label=Nr errors lesser than
JobPGPEncryptFiles.Log.FetchFolder=Fetching folder [{0}]
JobPGPEncryptFiles.Log.FolderNotExist=Folder {0} does not exist \!
JobPGPEncryptFiles.Log.Info.FilesInError=Total files in error \: {0}
JobPGPEncryptFiles.Fields.Wildcard.Tooltip=Specify here the wildcard to match.\n Only files that match the wildcard will be moved.
JobPGPEncryptFiles.Fields.DestinationFileFolder.Tooltip=Enter here the destination folder to hit.\n If you selected file as source,you can define a file as destination.
JobPGPEncryptFiles.FilenameDelete.Button=&Delete
GPG.ErrorWritingTempFile=Cannot write GPG temporary file\! 
JobPGPEncryptFiles.Log.FileRemovedInfos=file deleted
JobPGPEncryptFiles.Log.FolderWasCreated=Parent folder {0} was created.
JobPGPEncryptFiles.ActionsType.Sign.Label=Sign
JobPGPEncryptFiles.Log.ProcessingRow=Processing row source File/folder source \: [{0}] ... destination file/folder \: [{1}]... wildcard \: [{2}]
GPG.ErrorCheckingGPGFil=Error checking GPG file\!
JobPGPEncryptFiles.Error.Exception.CanRemoveFileFolder=Can not delete file/folder [{0}]
GPG.ExceptionillegalThreadStateException=Illegal Thread State Exception
JobPGPEncryptFiles.CreateDestinationFolder.Tooltip=Create destination folder if necessary.\nIf destination is a file, parent folder will be created if necessary.
JobPGPEncryptFiles.SourceFileFolder.Label=File/Folder source
JobPGPEncryptFiles.Error=Error encrypting file\! {0}
JobPGPEncryptFiles.ActionsType.SignAndEncrypt.Label=Sign and encrypt
JobPGPEncryptFiles.Settings.Label=Settings
JobPGPEncryptFiles.SuccessWhenErrorsLessThan.Label=Success when number of errors lesser than 
JobPGPEncryptFiles.Error.GettingFilename=Error getting filename for file [{0}]. Exception \: {1}
JobPGPEncryptFiles.Error.Exception.UnableLoadXML=Unable to load action of type ''PGPEncryptFiles'' from XML node
JobPGPEncryptFiles.MovedDateTimeFormat.Label=Date format
JobPGPEncryptFiles.IncludeSubfolders.Label=Include Subfolders
JobPGPEncryptFiles.Do_Nothing_IfFileExists.Label=Do nothing
JobPGPEncryptFiles.Log.CanNotMoveFolderToFile=Can not decrypt folder content [{0}] to file [{1}]
JobPGPEncryptFiles.Move_To_Folder_IfFileExists.Label=Move source file to folder
JobPGPEncryptFiles.RemoveSourceFiles.Label=Remove source files
JobPGPEncryptFiles.Fields.Action.Label=Action
JobPGPEncryptFiles.Title=Encrypt files with PGP
JobPGPEncryptFiles.Fail_IfFileExists.Label=Fail
JobPGPEncryptFiles.SuccessCondition.Label=Success condition 
JobPGPEncryptFiles.Overwrite_File_IfFileExists.Label=Overwrite destination file
JobPGPEncryptFiles.DestinationIsAFile.Label=Destination is a file
JobPGPEncryptFiles.Log.ArgFromPrevious.Found=found [{0}] argument(s) from previous result
JobPGPEncryptFiles.AddMovedTime.Tooltip=Add time
JobPGPEncryptFiles.Error.AddingToFilenameResult=Error adding filename [{0}] to result filesname. Exception \: {1}
JobPGPEncryptFiles.GpgExe.Label=GPG location
JobPGPEncryptFiles.GroupDestinationFile.Label=Destination file
JobPGPEncryptFiles.FileResult.Group.Label=Result files name
JobPGPEncryptFiles.Log.Error=Error while processing \: {0}
JobPGPEncryptFiles.Error.Exception.MoveProcessError=There was an error encrypting file [{0}] to [{1}] \: [{2}]
JobPGPEncryptFiles.SpecifyFormat.Label=Specify Date time format
JobPGPEncryptFiles.Error.DestinationFolderNotFound=Destination folder does not exist\!
GPG.ExceptionWrite=Exception at write\!
JobPGPEncryptFiles.Fields.SourceFileFolder.Tooltip=Enter here the file or folder to move\n If it's a folder, PDI will fetch only if ''Include subfolders'' is checked\!
JobPGPEncryptFiles.SpecifyMoveFormat.Label=Specify format
JobPGPEncryptFiles.AddDateBeforeExtension.Tooltip=If you select this option, PDI will add date (and time) before file extension.\nThe extension will be considered starting from the last ''.'' found.
JobPGPEncryptFiles.DateTimeFormat.Label=Date time format
JobPGPEncryptFiles.Tab.Advanced.Label=Advanced
GPG.GPGFilenameNotFound=We can not find GPG file [{0}]\!
JobPGPEncryptFiles.IfFileExists.Label=If destination file exists 
JobPGPEncryptFiles.Overwrite_Filename_IffMovedFileExists.Label=Overwrite file
JobPGPEncryptFiles.Name.Label=Action name\: 
GPG.RunningCommand=Running GPG command [{0}] ...
JobPGPEncryptFiles.FilenameAdd.Button=&Add
JobPGPEncryptFiles.Log.Error.FolderMissing=We can not find Folder [{0}] \!
JobPGPEncryptFiles.SuccessWhenAtLeat.Label=Success when at least x files decrypted
JobPGPEncryptFiles.DestinationFileFolder.Label=File/Folder destination
JobPGPEncryptFiles.Fields.UserID.Label=User ID
JobPGPEncryptFiles.GpgExe.Tooltip=Specify gpg location
JobPGPEncryptFiles.SpecifyFormat.Tooltip=Specify Date time format
JobPGPEncryptFiles.Error.SourceFileNotExists=File/folder [{0}] does not exist\!
JobPGPEncryptFiles.UniqueName_IfMovedFileExists.Label=Unique name
JobPGPEncryptFiles.Log.FolderOverwrite=Folder [{0}] was overwritten
JobPGPEncryptFiles.Do_Nothing_IfMovedFileExists.Label=Do nothing
JobPGPEncryptFiles.asciiMode.Label=Use ASCII mode
GPG.ErrorCheckingGPGFile=Error cheking PGP file
JobPGPEncryptFiles.Log.Error.NotFolder=[{0}] is not a folder \!
JobPGPEncryptFiles.Log.FileDeleted=Source file [{0}] was deleted
JobPGPEncryptFiles.Log.IgnoringRow=Ignoring row with source or destination is NULL. Source File/folder source \: [{0}], destination file/folder \: [{1}], wilcard \: [{2}]
JobPGPEncryptFiles.Tab.General.Label=General
JobPGPEncryptFiles.AddFileToResult.Label=Add files to result files name
JobPGPEncryptFiles.AddDate.Label=Add date to filename
JobPGPEncryptFiles.FilenameDelete.Tooltip=Remove selected files from the grid
JobPGPEncryptFiles.Fields.Label=Files/Folders\: 
JobPGPEncryptFiles.Log.Error.MoveToFolderMissing=The move to folder is missing
JobPGPEncryptFiles.Wildcard.Label=Wildcard
JobPGPEncryptFiles.Log.Forbidden=FORBIDDEN
JobPGPEncryptFiles.CreateMoveToFolder.Label=Create folder
GPG.DeletingTempFile=Deleting GPG temporary file [{0}] ...
JobPGPEncryptFiles.Log.Info.FilesInSuccess=Total files successfully processed \: {0}
JobPGPEncryptFiles.Simulate.Tooltip=Select this option if you want to simulate the process.\nPDI will not move files.
JobPGPEncryptFiles.DestinationFileFolder.Tooltip=Enter here the destination folder to hit.\n If you selected file as source,you can define a file as destination.
JobPGPEncryptFiles.Log.IncludeSubFoldersOn=Sub folders will be fetched ...
JobPGPEncryptFiles.Wildcard.Tooltip=Specify here the wildcard to match.\n Only files that match the wildcard will be moved.
JobPGPEncryptFiles.Fail_IfMovedFileExists.Label=Fail
JobPGPEncryptFiles.SpecifyMoveFormat.Tooltip=Specify format
JobPGPEncryptFiles.AddTime.Label=Add time to filename
JobPGPEncryptFiles.DestinationFolder.Label=Destination folder
JobPGPEncryptFiles.Previous.Label=Copy previous results to args
JobPGPEncryptFiles.Log.FileOverwrite=File [{0}] was overwritten
JobPGPEncryptFiles.Log.FileEncrypted=File [{0}] was decrypted to [{1}] 
JobPGPEncryptFiles.SuccessOn.Group.Label=Success On
JobPGPEncryptFiles.GroupMoveToGroup.Label=Move to folder
JobPGPEncryptFiles.AddDateBeforeExtension.Label=Add date before extension
JobPGPEncryptFiles.Log.FileAddedToResultFilesName=File [{0}] was added to result filenames
JobPGPEncryptFiles.Delete_Source_File_IfFileExists.Label=Delete source file
ActionPGPEncryptFiles.log.IgnoringFile=Ignoring file [{0}] ...
JobPGPEncryptFiles.Log.FileExists=File [{0}] exists\!
JobPGPEncryptFiles.BrowseFiles.Label=File...
JobPGPEncryptFiles.DestinationFolder.Tooltip=Destination folder
JobPGPEncryptFiles.DestinationFileTab.Label=Destination file
JobPGPEncryptFiles.Fields.Wildcard.Label=Wildcard
JobPGPEncryptFiles.Filetype.All=All files
JobPGPEncryptFiles.Fields.DestinationFileFolder.Label=File/Folder destination
JobPGPEncryptFiles.AddMovedDate.Label=Add date
JobPGPEncryptFiles.Previous.Tooltip=Check this to pass the results of the previous entry to the arguments of this entry.\nBe careful, arguments must be in the same order that arguments\!\n ie \:\n(1) action type (encrypt, sign, sign and encrypt)\n(2) source folder/file\n(3) wildcard\n(4) User ID\n(5) destination folder/file
JobPGPEncryptFiles.AddMovedTime.Label=Add time
JobPGPEncryptFiles.AddDate.Tooltip=Add date to filename
JobPGPEncryptFiles.Log.CanNotCreateParentFolder=Could not create parent folder {0}\!
JobPGPEncryptFiles.CreateMoveToFolder.Tooltip=Create folder if necessary
JobPGPEncryptFiles.Log.FolderExists=Folder [{0}] exists\!
JobPGPEncryptFiles.Fields.UserID.Tooltip=Name of the key
JobPGPEncryptFiles.SourceFileFolder.Tooltip=Enter here the file or folder to move\n If it's a folder, check ''Include subfolders'' option if necessary\!
JobPGPEncryptFiles.Error.Exception.MoveProcess=Can not move file/folder [{0}] to [{1}]. Exception \: [{2}]
GPG.ErrorCreatingTempFile=Cannot create GPG temporary file\!
GPG.Exception.ExistStatus=Error running command\: {0}
JobPGPEncryptFiles.IfMovedFileExists.Label=If file exists in destination folder 
JobPGPEncryptFiles.DoNotKeepFolderStructure.Label=Do not keep folder structure
GPG.IOException=IO exception while writing running command\!
JobPGPEncryptFiles.AddMovedDateBeforeExtension.Label=Add date before extension
JobPGPEncryptFiles.Log.FileFolderRemovedInfos=File/folder deleted
JobPGPEncryptFiles.asciiMode.Tooltip=Use ASCII mode otherwise the file will be created in binary.
JobPGPEncryptFiles.ActionsType.Encrypt.Label=Encrypt
JobPGPEncryptFiles.CreateDestinationFolder.Label=Create destination folder
GPG.GPGFilenameMissing=GPG filename is missing\!
JobPGPEncryptFiles.FilenameEdit.Tooltip=Edit selected files
JobPGPEncryptFiles.AddFileToResult.Tooltip=Add destination files to result files name.\nIt is helpful if you want to attach theses files to an email thanks to send mail action.
JobPGPEncryptFiles.Error.SuccessConditionbroken=Success condition was broken. We have {0} error(s)
JobPGPEncryptFiles.FilenameEdit.Button=&Edit
JobPGPEncryptFiles.DestinationIsAFile.Tooltip=PDI will consider that destination is a file.
JobPGPEncryptFiles.DoNotKeepFolderStructure.Tooltip=Check this option if you want to decrypt and create files in\n destination file without keeping folders structure.
GPG.GPGNotAFile=[{0}] is not a valid GPG file\! Please provid a filename.
GPG.TempFileCreated=Temporary GPG file [{0}] was created.
JobPGPEncryptFiles.IncludeSubfolders.Tooltip=Check this if you want to fetch also sub folders\nThis option will work only when the source is a folder.
JobPGPEncryptFiles.Fields.SourceFileFolder.Label=File/Folder source
JobPGPEncryptFiles.NrErrorsLessThan.Tooltip=Success when Number of errors is lesser than
JobPGPEncryptFiles.AddMovedDate.Tooltip=Add date
JobPGPEncryptFiles.SuccessWhenAllWorksFine.Label=Success when all works fine
JobPGPEncryptFiles.Name.Default=Move files
