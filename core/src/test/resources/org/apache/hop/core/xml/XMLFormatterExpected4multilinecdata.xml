<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  -->

<class_source><![CDATA[ import java.util.*;

private int yearIndex;
private Calendar calendar;

public boolean processRow(TransformMetaInterface smi, TransformDataInterface sdi) throws HopException
{
  Object[] r=getRow();
  if (r==null)
  {
    setOutputDone();
	return false;
  }

  if (first) {
     yearIndex = getInputRowMeta().indexOfValue(getParameter("YEAR"));
     if (yearIndex<0) {
         throw new HopException("Year field not found in the input row, check parameter 'YEAR'!");
     }

     calendar = Calendar.getInstance();
     calendar.clear();

     first=false;
  }
 
  Object[] outputRowData = RowDataUtil.resizeArray(r, data.outputRowMeta.size());
  int outputIndex = getInputRowMeta().size();

  Long year = getInputRowMeta().getInteger(r, yearIndex);
  outputRowData[outputIndex++] = easterDate(year.intValue());

  putRow(data.outputRowMeta, outputRowData);

  return true;
}

private Date easterDate(int year) {
 int a = year % 19;
 int b = (int)Math.floor(year / 100);
 int c = year % 100;
 int d = (int)Math.floor(b / 4);
 int e = b % 4;
 int f = (int)Math.floor((b + 8) / 25);
 int g = (int)Math.floor((b - f + 1) / 3);
 int h = (19 * a + b - d - g + 15) % 30;
 int i = (int)Math.floor(c / 4);
 int k = c % 4;
 int L = (32 + 2 * e + 2 * i - h - k) % 7;
 int m = (int)Math.floor((a + 11 * h + 22 * L) / 451);
 int n = h + L - 7 * m + 114;
 
 calendar.set(year, (int)(Math.floor(n / 31) - 1), (int)((n % 31) + 1));
 return calendar.getTime();
}]]></class_source>
