#File generated by Hop Translator for package 'org.apache.hop.pipeline.transform' in locale 'en_US'
#
#
#Thu Mar 05 14:54:58 CET 2009
BaseTransform.TypeLongDesc.TableExists=Table exists
BaseTransform.TypeLongDesc.InsertOrUpdate=Insert / update
BaseTransform.TypeLongDesc.GetFileNames=Get file names
BaseTransform.TypeLongDesc.SwitchCase=Switch / case
BaseTransform.TypeLongDesc.StreamLookup=Stream lookup
BaseTransform.TypeLongDesc.MergeRows=Merge rows (diff)
BaseTransform.TypeLongDesc.StringCut=Strings cut
BaseTransform.TypeLongDesc.MySQLBulkLoader=MySQL bulk loader
BaseTransform.TypeTooltipDesc.MySQLBulkLoader=MySQL bulk loader transform, loading data over a named pipe (not available on MS Windows)
BaseTransform.Category.DataWarehouse=Data Warehouse
BaseTransform.Log.SleepInterupted3=Interrupted while looking for more rows from transform [{0}]
BaseTransform.Log.SleepInterupted2=Sleep interrupted while looking for more rows from transform [{0}] -->
TransformMeta.Log.EndOfReadXML=end of readXML()
BaseTransform.TypeTooltipDesc.AddXML=Encode several fields into an XML fragment
BaseTransform.ColumnName.LinesReaded=lines_read
BaseTransform.Log.GotPreviousTransform=Got previous transform from [{0}] \#{1} --> {2}
BaseTransform.Category.Statistics=Statistics
BaseTransform.TypeLongDesc.Injector=Injector
BaseTransform.TypeLongDesc.JavaFilter=Java filter
BaseTransform.TypeTooltipDesc.JavaFilter=Filter rows using java code
BaseTransform.status.Paused=Paused
BaseTransform.TypeTooltipDesc.UnivariateStats=This transform computes some simple stats based on a single input field
BaseTransform.TypeTooltipDesc.Dimensionupdate=Update a slowly changing dimension in a data warehouse.\nAlternatively, look up information in this dimension.
BaseTransform.TypeLongDesc.FileExists=File exists
BaseTransformDialog.ErrorHandling.Title.Label=Transform error handling settings
BaseTransform.status.Idle=Idle
BaseTransform.TypeLongDesc.ParallelGzipCsvInput=GZIP CSV input
BaseTransform.TypeTooltipDesc.ParallelGzipCsvInput=Parallel GZIP CSV file input reader
BaseTransform.TypeTooltipDesc.CsvInput=Simple CSV file input
BaseTransform.TypeTooltipDesc.JavaScriptValueMod=This is a modified plugin for the Scripting Values with improved interface and performance.\nWritten & donated to open source by Martin Lange, Proconis \: http\://www.proconis.de
BaseTransformDialog.ErrorHandling.ErrCodeFieldName.Label=Error codes fieldname
BaseTransform.TypeTooltipDesc.GetXMLData=Get data from XML file by using XPath.\n This transform also allows you to parse XML defined in a previous field.
BaseTransform.SafeMode.Exception.MixingLayout=The name of field number {0} is not the same as in the first row received\: you''re mixing rows with different layout. Field [{1}] does not have the same name as field [{2}].
BaseTransform.TypeTooltipDesc.ReservoirSampling=[Transform] Samples a fixed number of rows from the incoming stream
BaseTransform.TypeTooltipDesc.Databaselookup=Look up values in a database using field values
BaseTransform.Category.Transform=Transform
BaseTransform.Exception.TargetTransformToWriteToDoesntExist=The target transform [{0}] to write to doesn''t exist.
BaseTransform.TypeLongDesc.PropertyOutput=Properties output
BaseTransform.TypeTooltipDesc.ExecSqlRow=Execute SQL script extracted from a field\ncreated in a previous transform.
BaseTransform.TypeTooltipDesc.RssOutput=Read RSS stream.
BaseTransform.TypeLongDesc.Janino=User defined Java expression
BaseTransform.TypeLongDesc.OraBulkLoader=Oracle bulk loader
BaseTransform.TypeTooltipDesc.Formula=Calculate a formula using Hop''s libformula
BaseTransform.TypeTooltipDesc.GetSystemInfo=Get information from the system like system date, arguments, etc.
BaseTransform.TypeLongDesc.FixedInput=Fixed file input
BaseTransform.TypeTooltipDesc.ExecuteSQL=Execute an SQL script, optionally parameterized using input rows
BaseTransform.Category.Flow=Flow
BaseTransform.TypeLongDesc.GroupBy=Group by
BaseTransform.TypeLongDesc.MemoryGroupBy=Memory group by
BaseTransform.TypeLongDesc.RowNormaliser=Row normaliser
BaseTransform.TypeLongDesc.DimensionUpdate=Dimension lookup/update
BaseTransform.TypeTooltipDesc.Addconstants=Add one or more constants to the input rows
BaseTransform.TypeLongDesc.MappingInput=Mapping input specification
BaseTransform.TypeLongDesc.Delete=Delete
BaseTransform.TypeLongDesc.SocketReader=Socket reader
BaseTransform.TypeLongDesc.BlockingTransform=Blocking Transform
BaseTransform.TypeLongDesc.FilesFromResult=Get files from result
BaseTransform.TypeTooltipDesc.CallDBProcedure=Get back information by calling a database procedure.
BaseTransform.TypeLongDesc.FilterRows=Filter rows
BaseTransform.TypeTooltipDesc.GetVariable=Determine the values of certain (project or Hop) variables and put them in field values.
BaseTransform.status.Empty=Empty
BaseTransform.status.Halted=Halted
BaseTransform.Category.Scripting=Scripting
BaseTransform.TypeTooltipDesc.GPBulkLoader=Greenplum bulk loader
TransformMeta.Exception.UnableToLoadClass=Unable to load class for transform/plugin with id [{0}]. Check if the plugin is available in the plugins subdirectory of the Hop distribution.
BaseTransform.TypeLongDesc.ExcelOutput=Microsoft Excel output
BaseTransform.TypeLongDesc.GetRows=Get rows from result
BaseTransform.TypeTooltipDesc.Streamlookup=Look up values coming from another stream in the pipeline.
BaseTransform.TypeTooltipDesc.DetectEmptyStream=This transform will output one empty row if input stream is empty\n(ie when input stream does not contain any row)
BaseTransformDialog.ErrorHandling.Enable.Label=Enable the error handling?
BaseTransform.Exception.SourceTransformToReadFromCantRunInMultipleCopies=The source transform to read from [{0}] can''t be executed in multiple ({1}) copies.  Insert a Dummy transform to resolve this situation.
BaseTransform.TypeLongDesc.GetSubFolders=Get subfolder names
BaseTransform.TypeTooltipDesc.UniqueRowsByHashSet=Remove double rows and leave only unique occurrences by using a HashSet.
BaseTransform.TypeLongDesc.CubeInput=De-serialize from file
BaseTransform.TypeLongDesc.DatabaseLookup=Database lookup
BaseTransform.TypeTooltipDesc.TableExists=Check if a table exists on a specified connection
BaseTransform.Log.DistributionActivated=distribution activated
BaseTransform.TypeLongDesc.CubeOutput=Serialize to file
BaseTransformDialog.ErrorHandling.MaxErr.Label=Max nr errors allowed
BaseTransformDialog.FailedToGetFields.Message=There was an error while obtaining the list of fields from the previous transforms for transform ''{0}''.
BaseTransform.TypeTooltipDesc.LDIFInput=Read data from LDIF files
BaseTransform.TypeLongDesc.BeanShell=BeanShell Input
BaseTransform.TypeLongDesc.Caculator=Calculator
BaseTransform.Log.TooManyRejectedRows=Too many rows where rejected by the error handling, {0} is the maximum and {1} rows where rejected.  This pipeline is being asked to stop.
BaseTransform.TypeLongDesc.JavaScript=Java Script Value
BaseTransform.TypeLongDesc.ExcelInput=Microsoft Excel input
BaseTransform.TypeTooltipDesc.ColumnExists=Check if a column exists in a table on a specified connection.
BaseTransformDialog.ErrorHandling.TransformName.Label=Error handling transform name
BaseTransform.TypeLongDesc.TableInput=Table input
BaseTransform.TypeLongDesc.GetXMLData=Get data from XML
BaseTransform.TypeTooltipDesc.XMLOutput=Write data to an XML file
BaseTransform.TypeLongDesc.MergeJoin=Merge join
BaseTransform.TypeLongDesc.RandomValue=Generate random value
BaseTransform.status.Halting=Halting
BaseTransform.ColumnName.TransformName=transform name
BaseTransform.TypeLongDesc.WebServiceLookup=Web services lookup
BaseTransformDialog.EditConnectionButton.Label=&Edit...
BaseTransform.TypeLongDesc.DynamicSQLRow=Dynamic SQL row
BaseTransform.TypeLongDesc.AddXML=Add XML
BaseTransform.Category.Output=Output
BaseTransform.TypeTooltipDesc.Dummy=This transform type doesn''t do anything.\nIt''s useful however when testing things or in certain situations where you want to split streams.
BaseTransform.TypeTooltipDesc.MappingInputSpecification=Specify the input interface of a mapping
BaseTransform.TypeTooltipDesc.Databasejoin=Execute a database query using stream values as parameters
BaseTransform.status.Disposed=Disposed
BaseTransform.TypeTooltipDesc.SelectValues=Select or remove fields in a row.\nOptionally, set the field meta-data\: type, length and precision.
BaseTransform.TypeLongDesc.MappingSubPipeline=Mapping (sub-transformation)
BaseTransform.TypeLongDesc.SimpleMappingSubPipeline=Simple mapping (sub-transformation)
BaseTransform.TypeTooltipDesc.RssInput=Read RSS feeds
BaseTransform.TypeTooltipDesc.JoinRows=The output of this transform is the cartesian product of the input streams.\nThe number of rows is the multiplication of the number of rows in the input streams.
BaseTransform.TypeLongDesc.SetValueConstant=Set field value to a constant
BaseTransform.TypeLongDesc.RowDenormaliser=Row denormaliser
BaseTransform.TypeLongDesc.DetectLastRow=Identify last row in a stream
BaseTransform.Log.FoundInputRowset=Found input rowset [{0}]
BaseTransform.TypeTooltipDesc.PropertyInput=Read data (key, value) from properties files.
BaseTransform.TypeTooltipDesc.TextInputFile=Read data from a text file in several formats.\nThis data can then be passed on to the next transform(s)...
BaseTransform.Category.Utility=Utility
BaseTransform.TypeLongDesc.NumberRange=Number range
BaseTransform.Exception.SourceTransformToReadFromDoesntExist=The source transform to read from [{0}] couldn''t be found.
TransformMeta.Log.SpecificLoadedTransform=specifics loaded for {0}
BaseTransform.Log.ErrorSettingPriority=Error occured setting priorityFrom
BaseTransform.TypeTooltipDesc.SampleRows=Filter rows based on the line number.
BaseTransform.TypeTooltipDesc.InsertOrUpdate=Update or insert rows in a database based upon keys.
BaseTransformDialog.ErrorHandling.MaxPctErr.Label=Max % errors allowed (empty\=\=100%)
BaseTransform.ColumnName.EndDate=end_date
BaseTransform.Category.Bulk=Bulk loading
BaseTransform.TypeLongDesc.XBaseInput=XBase input
BaseTransform.status.Stopped=Stopped
BaseTransform.TypeLongDesc.Mail=Mail
BaseTransform.TypeLongDesc.AddConstants=Add constants
BaseTransform.TypeLongDesc.WriteToLog=Write to log
BaseTransform.TypeTooltipDesc.Mail=Send eMail.
BaseTransform.TypeLongDesc.GPBulkLoader=Greenplum bulk loader
BaseTransform.Log.StopPuttingARow=Stopped while putting a row on the buffer
BaseTransformDialog.ErrorHandling.NrErrField.Label=Nr of errors fieldname
BaseTransform.TypeLongDesc.LDAPInput=LDAP input
BaseTransform.Log.OutputRowInfo=output rel. is  {0}\:{1}
BaseTransform.TypeLongDesc.OldTextFileInput=Text file input
BaseTransform.TypeLongDesc.TextFileInput=Text file input
BaseTransform.Log.MaxPercentageRejectedReached=The maximum percentage of rejected rows of {0} has been reached.  {1} rows where rejected out of {2}.  This pipeline is being asked to stop.
BaseTransform.TypeTooltipDesc.MergeRows=Merge two streams of rows, sorted on a certain key.  The two streams are compared and the equals, changed, deleted and new rows are flagged.
BaseTransform.TypeTooltipDesc.StringCut=Strings cut (substring).
BaseTransform.TypeTooltipDesc.Groupby=Builds aggregates in a group by fashion.\nThis works only on a sorted input.\nIf the input is not sorted, only double consecutive rows are handled correctly.
BaseTransformDialog.FailedToGetFieldsPrevious.DialogTitle=Error fields
BaseTransform.Log.InputRowInfo=input rel is {0}\:{1}
BaseTransform.Category.Inline=Inline
BaseTransformDialog.NewConnectionButton.Label=&New...
BaseTransform.TypeTooltipDesc.MondrianInput=Execute and retrieve data using an MDX query against a Hop Analyses OLAP server (Mondrian)
BaseTransform.TypeTooltipDesc.OlapInput=Execute and retrieve data using an MDX query against any XML/A OLAP datasource using olap4j
BaseTransform.TypeLongDesc.RssInput=RSS input
BaseTransform.Log.ErrorInThreadSleeping=Interupted while trying to put a new row in a buffer\:
BaseTransform.TypeTooltipDesc.Update=Update data in a database table based upon keys
BaseTransform.TypeTooltipDesc.MailValidator=Check if an email address is valid.
BaseTransform.TypeLongDesc.DatabaseJoin=Database join
BaseTransform.Log.AllowedRelationships=Only 1-1, 1-n, n-1 and n-n relationships are allowed\!
BaseTransform.TypeLongDesc.TransformMetastructure=Metadata structure of stream
BaseTransformDialog.Connection.Label=Connection
BaseTransform.TypeTooltipDesc.OraBulkLoader=Use Oracle bulk loader to load data
BaseTransform.ColumnName.LinesWritten=lines_written
BaseTransform.TypeLongDesc.Dummy=Dummy (do nothing)
BaseTransform.TypeTooltipDesc.Cubeinput=Read rows of data from a data cube.
BaseTransform.Exception.InputStreamExpected=Transform [{0}] expected an input stream, but no input was provided
BaseTransform.TypeTooltipDesc.ExcelOutput=Stores records into an Excel (XLS) document with formatting information.
BaseTransform.TypeTooltipDesc.SwitchCase=Switch a row to a certain target transform based on the case value in a field.
BaseTransform.TypeTooltipDesc.RowNormaliser=De-normalised information can be normalised using this transform type.
BaseTransform.TypeTooltipDesc.XMLJoin=Joins a stream of XML-Tags into a target XML string
BaseTransform.TypeTooltipDesc.GenerateRows=Generate a number of empty or equal rows.
BaseTransform.TypeLongDesc.CsvInput=CSV file input
BaseTransform.TypeTooltipDesc.SetValueField=Set value of a field with another value field
BaseTransform.TypeTooltipDesc.Cubeoutput=Write rows of data to a data cube
BaseTransform.TypeLongDesc.ColumnExists=Check if a column exists
BaseTransform.TypeTooltipDesc.Delay=Output each input row after a delay
BaseTransform.TypeTooltipDesc.RowsDenormalises=Denormalises rows by looking up key-value pairs and by assigning them to new fields in the output rows.\nThis method aggregates and needs the input rows to be sorted on the grouping fields
BaseTransform.Log.SummaryInfo=Finished processing (I\={0}, O\={1}, R\={2}, W\={3}, U\={4}, E\={5})
BaseTransform.TypeTooltipDesc.PropertyOutput=Write data to properties file
BaseTransform.Category.Mapping=Mapping
BaseTransform.TypeLongDesc.JavaScriptMod=JavaScript
BaseTransform.TypeTooltipDesc.ExecProcess=Execute a process and return the result
BaseTransform.TypeTooltipDesc.FilesToResult=This transform allows you to set filenames in the result of this pipeline.\nSubsequent actions can then use this information.
BaseTransformDialog.ErrorHandling.ErrDescField.Label=Error descriptions fieldname
BaseTransform.Category.Experimental=Experimental
BaseTransform.Log.DistributionDeactivated=distribution de-activated
BaseTransform.Log.OutputDone=Signaling ''output done'' to {0} output rowsets.
BaseTransform.TypeLongDesc.GetSystemInfo=Get system info
BaseTransform.Exception.TargetTransformToWriteToCantRunInMultipleCopies=The target transform [{0}] to write to can''t be run in multiple ({1}) copies.
BaseTransform.TypeTooltipDesc.ReplaceString=Replace all occurences a word in a string with another word.
BaseTransform.TypeLongDesc.MailInput=Email messages input
BaseTransform.TypeTooltipDesc.MailInput=Read POP3/IMAP server and retrieve messages
BaseTransform.TypeTooltipDesc.GetSubFolders=Read a parent folder and return all subfolders
BaseTransform.TypeLongDesc.CreditCardValidator=Credit card validator
BaseTransform.TypeLongDesc.RowFalttener=Row flattener
BaseTransform.TypeLongDesc.SelectValues=Select values
BaseTransform.TypeLongDesc.AddSequence=Add sequence
BaseTransform.TypeTooltipDesc.FileExists=Check if a file exists
BaseTransform.TypeLongDesc.GetFilesRowsCount=Get files rows count
BaseTransform.TypeTooltipDesc.RandomValue=Generate random value
BaseTransform.TypeTooltipDesc.HTTPPOST=Call a web service request over HTTP by supplying a base URL by allowing parameters to be set dynamically
BaseTransform.TypeTooltipDesc.MappingSubPipeline=Run a mapping (sub-transformation), use MappingInput and MappingOutput to specify the fields interface
BaseTransform.TypeTooltipDesc.SimpleMappingSubPipeline=Run a mapping (sub-transformation), use MappingInput and MappingOutput to specify the fields interface.  This is the simplified version only allowing one input and one output data set.
BaseTransform.Log.TransformMeta=Transform info\: nrinput\={0} nroutput\={1}
BaseTransform.Log.UnableToFindOutputRowset=Unable to find output rowset\!
BaseTransform.TypeLongDesc.MappingOutput=Mapping output specification
BaseTransform.TypeLongDesc.SampleRows=Sample rows
BaseTransform.ColumnName.Errors=errors
BaseTransformDialog.ErrorHandling.MinErr.Label=Min nr of rows to read before doing % evaluation 
BaseTransform.TypeTooltipDesc.SocketWriter=Socket writer.  A socket server that can send rows of data to a socket reader.
BaseTransformDialog.FailedToGetFields.Title=Error
BaseTransform.TypeLongDesc.Formula=Formula
BaseTransform.ColumnName.LinesUpdated=lines_updated
BaseTransform.TypeTooltipDesc.JavaScriptValue=Create java scripts to calculate new fields, alter existing ones or manipulate a row.
BaseTransform.TypeTooltipDesc.TransformMetastructure=This is a transform to read the metadata of the incoming stream.
BaseTransform.Log.UnableToFindInputRowset=Unable to find input rowset\!
BaseTransform.TypeTooltipDesc.IfNull=Sets a field value to a constant if it is null.
BaseTransform.TypeLongDesc.SortedMerge=Sorted merge
BaseTransform.TypeLongDesc.UnivariateStats=Univariate statistics
BaseTransformDialog.AddNew=Add &new
BaseTransform.TypeTooltipDesc.Injector=Injector transform to allow to inject rows into the pipeline through the java API
BaseTransform.Category.Lookup=Lookup
BaseTransform.Log.FoundOutputRowset=Found output rowset [{0}]
BaseTransform.TypeTooltipDesc.FilesFromResult=This transform allows you to read filenames used or generated in a previous entry in a workflow.
BaseTransform.TypeLongDesc.ExecSqlRow=Execute row SQL script
BaseTransform.TypeLongDesc.GetVariable=Get variables
BaseTransform.Category.Validation=Validation
BaseTransform.status.Init=Initializing
BaseTransform.TypeLongDesc.MonetDBBulkLoader=MonetDB bulk loader
BaseTransform.TypeLongDesc.MonetDBAgileMart=MonetDB Agile Mart
BaseTransform.TypeTooltipDesc.TextOutputFile=Write rows to a text file.
BaseTransform.TypeLongDesc.SplitFields=Split fields
BaseTransform.TypeTooltipDesc.FixedInput=Fixed file input
BaseTransformDialog.GetFieldsChoice.Title=Question
BaseTransform.TypeLongDesc.Delay=Delay row
BaseTransform.status.Finished=Finished
BaseTransformDialog.ErrorHandling.ErrFieldName.Label=Error fields fieldname
BaseTransform.TypeTooltipDesc.WebServiceLookup=Look up information using web services (WSDL)
BaseTransform.TypeTooltipDesc.Calculator=Create new fields by performing simple calculations
BaseTransformDialog.FailedToGetFieldsPrevious.DialogMessage=Error while getting fields from previous transform\!
BaseTransform.TypeTooltipDesc.FilterRows=Filter rows using simple equations
BaseTransform.TypeTooltipDesc.Sortrows=Sort rows based upon field values (ascending or descending)
BaseTransform.TypeTooltipDesc.GetFilesRowsCount=Returns rows count for text files.
BaseTransformDialog.Add=Add &all
BaseTransform.TypeLongDesc.RssOutput=RSS output
BaseTransform.TypeTooltipDesc.BeanShell=Execute a beanshell
BaseTransformDialog.ErrorHandling.TargetTransform.Label=Target transform
BaseTransform.TypeTooltipDesc.SetValueConstant=Set value of a field to a constant
BaseTransform.TypeLongDesc.GenerateRows=Generate rows
BaseTransform.TypeLongDesc.SortRows=Sort rows
BaseTransform.SafeMode.Exception.DoubleFieldnames=The field with name [{0}] occurs twice in a row.  This is not allowed.
BaseTransform.TypeLongDesc.PropertyInput=Property input
TransformMeta.Exception.UnableToLoadTransformMeta=Unable to load transform info from XML transform node
BaseTransform.TypeTooltipDesc.XSDValidator=Validate XML source (files or streams) against XML Schema Definition.
BaseTransform.TypeLongDesc.ValueMapper=Value mapper
BaseTransform.TypeTooltipDesc.MergeJoin=Joins two streams on a given key and outputs a joined set. The input streams must be sorted on the join key
BaseTransform.TypeLongDesc.Update=Update
BaseTransform.Log.StopLookingForMoreRows=Stopped looking for more rows.
BaseTransform.TypeLongDesc.SplitFieldToRows3=Split field to rows
BaseTransform.Log.XYRelationshipsNotAllowed=This means you can''t have x-y relationships\!
BaseTransform.TypeLongDesc.JoinRows=Join rows (cartesian product)
BaseTransform.Category.Input=Input
BaseTransform.Category.Deprecated=Deprecated
BaseTransform.Exception.UnexpectedErrorGettingInputStream=Unexpected error looking for input stream for transform [{0}]
BaseTransform.Exception.UnexpectedErrorEditingConnection.DialogTitle=Unexpected error
BaseTransform.Exception.UnexpectedErrorEditingConnection.DialogMessage=Unexpected error editing database connection
BaseTransform.TypeTooltipDesc.GetFileNames=Get file names from the operating system and send them to the next transform.
BaseTransform.SafeMode.Exception.MixingTypes=The data type of field \#{0} is not the same as the first row received\: you''re mixing rows with different layout. Field [{1}] does not have the same data type as field [{2}].
BaseTransform.SafeMode.Exception.MixingStorageTypes=The data storage of field \#{0} is not the same as the first row received\: you''re mixing rows with different storage types. Field [{1}] does not have the same storage type as field [{2}].
BaseTransform.TypeLongDesc.CallDBProcedure=Call DB procedure
BaseTransform.TypeLongDesc.CopyRows=Copy rows to result
BaseTransform.Exception.UnableToFindRowset=Unable to find rowset for target transform [{0}]
BaseTransform.TypeTooltipDesc.ExcelInput=Read data from Excel and OpenOffice Workbooks (XLS, XLSX, ODS).
BaseTransform.TypeLongDesc.HTTP=HTTP client
BaseTransform.TypeTooltipDesc.TableInput=Read information from a database table.
BaseTransform.TypeLongDesc.DetectEmptyStream=Detect empty stream
BaseTransform.TypeTooltipDesc.MonetDBBulkLoader=Load data into MonetDB by using their bulk load command in streaming mode.
BaseTransform.TypeTooltipDesc.MonetDBAgileMart=Load data into MonetDB for Agile BI use cases
BaseTransform.ColumnName.StartDate=start_date
BaseTransform.TypeTooltipDesc.HTTP=Call a web service over HTTP by supplying a base URL by allowing parameters to be set dynamically
BaseTransform.TypeTooltipDesc.TableOutput=Write information to a database table
BaseTransform.TypeTooltipDesc.TableAgileMart=Load data into a table for Agile BI use cases
BaseTransform.TypeTooltipDesc.InfobrightOutput=Load data to an Infobright database table
BaseTransform.TypeLongDesc.SocketWriter=Socket writer
BaseTransform.Log.FinishedDispatching=Finished dispatching
BaseTransform.TypeTooltipDesc.CheckSum=Add a checksum column for each input row
BaseTransformDialog.GetFieldsChoice.Message=There already is data entered, {0} lines were found.\nHow do you want to add the {1} field that were found?
BaseTransform.TypeLongDesc.LDIFInput=LDIF input
BaseTransform.status.Running=Running
BaseTransform.ColumnName.Copy=copy
TransformMeta.Log.SaveTransformDetails=TRANSFORM SAVE details...
BaseTransform.TypeLongDesc.MondrianInput=Mondrian input
BaseTransform.TypeLongDesc.OlapInput=OLAP input
BaseTransform.TypeTooltipDesc.CopyRowsToResult=Use this transform to write rows to the executing workflow.\nThe information will then be passed to the next entry in this workflow.
BaseTransform.TypeTooltipDesc.MapValues=Maps values of a certain field from one value to another
BaseTransformDialog.Cancel=&Cancel
BaseTransform.TypeLongDesc.MailValidator=Mail validator
BaseTransform.TypeTooltipDesc.Uniquerows=Remove double rows and leave only unique occurrences.\nThis works only on a sorted input.\nIf the input is not sorted, only double consecutive rows are handled correctly.
BaseTransform.TypeLongDesc.XMLOutput=XML output
BaseTransform.TypeTooltipDesc.Janino=Calculate the result of a Java Expression using Janino
BaseTransform.Log.StartingBuffersAllocation=Starting allocation of buffers & new threads...
BaseTransform.ColumnName.LinesSkipped=lines_skipped
BaseTransform.TypeTooltipDesc.LDAPInput=Read data from LDAP host
BaseTransform.TypeTooltipDesc.CreditCardValidator=The Credit card validator transform will help you tell\:\n(1) if a credit card number is valid (uses LUHN10 (MOD-10) algorithm)\n(2) which credit card vendor handles that number\n(VISA, MasterCard, Diners Club, EnRoute, American Express (AMEX),...)
BaseTransform.TypeTooltipDesc.SortedMerge=Sorted merge
BaseTransform.TypeLongDesc.SetValueField=Set field value
BaseTransformDialog.ClearAndAdd=C&lear and add all
BaseTransform.Log.SleepInterupted=Sleep interrupted\! Stopping\:
BaseTransform.TypeTooltipDesc.Delete=Delete data in a database table based upon keys
BaseTransform.TypeTooltipDesc.SplitFieldToRows3=Splits a single string field by delimiter and creates a new row for each split term
BaseTransform.TypeLongDesc.XSLT=XSL pipeline
BaseTransform.TypeTooltipDesc.Addsequence=Get the next value from an sequence
BaseTransform.Category.Joins=Joins
BaseTransform.TypeLongDesc.UniqueRowsByHashSet=Unique rows (HashSet)
BaseTransform.TypeTooltipDesc.WriteToLog=Write data to log
BaseTransform.TypeLongDesc.FilesToResult=Set files in result
BaseTransform.TypeTooltipDesc.SplitFields=When you want to split a single field into more then one, use this transform type.
BaseTransform.TypeTooltipDesc.XSLT=Transform XML stream using XSL (eXtensible Stylesheet Language).
TransformMeta.Log.LookingForTheRightTransformNode=looking for the right transform node ({0})
BaseTransform.TypeTooltipDesc.DynamicSQLRow=Execute dynamic SQL statement build in a previous field
BaseTransform.TypeLongDesc.XMLJoin=XML join
BaseTransform.TypeTooltipDesc.NumberRange=Create ranges based on numeric field
BaseTransform.TypeTooltipDesc.MappingOutputSpecification=Specify the output interface of a mapping
BaseTransform.TypeLongDesc.ReplaceString=Replace in string
BaseTransform.TypeLongDesc.CheckSum=Add a checksum
BaseTransform.TypeLongDesc.ExcuteSQL=Execute SQL script
TransformMeta.Log.SaveNewTransform=TRANSFORM SAVE insert general...
BaseTransform.TypeLongDesc.TextFileOutput=Text file output
BaseTransform.TypeLongDesc.TextFileOutputLegacy=Text file output
BaseTransform.TypeTooltipDesc.Rowflattener=Flattens consecutive rows based on the order in which they appear in the input stream
BaseTransform.TypeLongDesc.Output=Table output
BaseTransform.TypeLongDesc.TableAgileMart=Table Agile Mart
BaseTransform.TypeLongDesc.InfobrightOutput=Infobright loader
BaseTransform.TypeLongDesc.ReservoirSampling=Reservoir sampling
BaseTransform.TypeLongDesc.XSDValidator=XSD validator
BaseTransform.Category.Workflow=Workflow
BaseTransform.TypeLongDesc.UniqueRows=Unique rows
BaseTransform.TypeLongDesc.ExecProcess=Execute a process
BaseTransform.TypeTooltipDesc.DetectLastRow=Last row will be marked
BaseTransform.TypeTooltipDesc.SocketReader=Socket reader.  A socket client that connects to a server (Socket Writer transform).
BaseTransform.TypeTooltipDesc.BlockingTransform=This transform blocks until all incoming rows have been processed.  Subsequent transforms only recieve the last input row to this transform.
BaseTransform.SafeMode.Exception.VaryingSize=We detected rows with varying number of fields, this is not allowed in a pipeline.  The first row contained {0} fields, another one contained {1} \: {2}
BaseTransform.TypeTooltipDesc.GetRowsFromResult=This allows you to read rows from a previous entry in a workflow.
BaseTransform.TypeTooltipDesc.XBaseinput=Reads records from an XBase type of database file (DBF)
BaseTransform.TypeLongDesc.HTTPPOST=HTTP post
BaseTransform.Exception.MetadataDoesntMatchDataRowSize=Unexpected error encountered : the number of fields in the metadata ({0}) does not match the number of entries in the row data ({1}).
BaseTransform.TypeLongDesc.GetTableNames=Get table names
BaseTransform.TypeTooltipDesc.GetTableNames=Get table names from database connection and send them to the next transform
BaseTransform.TypeTooltipDesc.MemoryGroupby=Builds aggregates in a group by fashion.\nThis transform doesn''t require sorted input.
BaseTransform.TypeLongDesc.DataGrid=Data grid
BaseTransform.TypeTooltipDesc.DataGrid=Enter rows of static data in a grid, usually for testing, reference or demo purpose
BaseTransform.TypeLongDesc.Script=Script
BaseTransform.TypeTooltipDesc.Script=Calculate values by scripting in Ruby, Python, Groovy, JavaScript, ... (JSR-223)
BaseTransform.TypeLongDesc.TeraFast=Teradata Fastload bulk loader
BaseTransform.TypeTooltipDesc.TeraFast=The Teradata Fastload bulk loader
BaseTransform.TypeLongDesc.SapInput=SAP Input
BaseTransform.TypeTooltipDesc.SapInput=Read data from SAP ERP, optionally with parameters
BaseTransform.TypeLongDesc.FieldsChangeSequence=Add value fields changing sequence
BaseTransform.TypeTooltipDesc.FieldsChangeSequence=Add sequence depending of fields value change.\nEach time value of at least one field change, PDI will reset sequence.
BaseTransform.TypeLongDesc.SyslogMessage=Send message to syslog
BaseTransform.TypeTooltipDesc.SyslogMessage=Send message to syslog server
BaseTransform.TypeLongDesc.FileLocked=Check if file is locked
BaseTransform.TypeTooltipDesc.FileLocked=Check if a file is locked by another process
BaseTransform.TypeLongDesc.WebServiceAvailable=Check if webservice is available
BaseTransform.TypeTooltipDesc.WebServiceAvailable=Check if a webservice is available
BaseTransform.TypeLongDesc.LoadFileInput=Load file content in memory
BaseTransform.TypeTooltipDesc.LoadFileInput=Load file content in memory
BaseTransform.TypeLongDesc.ChangeFileEncoding=Change file encoding
BaseTransform.TypeTooltipDesc.ChangeFileEncoding=Change file encoding and create a new file
BaseTransform.TypeLongDesc.FuzzyMatch=Fuzzy match
BaseTransform.TypeTooltipDesc.FuzzyMatch=Finding approximate matches to a string using matching algorithms.\nRead a field from a main stream and output approximative value from lookup stream.
BaseTransform.TypeLongDesc.MetaInject=ETL metadata injection
BaseTransform.TypeTooltipDesc.MetaInject=This transform allows you to inject metadata into an existing pipeline prior to execution.  This allows for the creation of dynamic and highly flexible data integration solutions.
BaseTransform.TypeLongDesc.RandomCCNumberGenerator=Generate random credit card numbers
BaseTransform.TypeTooltipDesc.RandomCCNumberGenerator=Generate random valide (luhn check) credit card numbers
BaseTransform.TypeLongDesc.JsonInput=Json Input
BaseTransform.TypeTooltipDesc.JsonInput=Extract relevant portions out of JSON structures (file or incoming field) and output rows
BaseTransform.TypeLongDesc.JsonOutput=JSON output
BaseTransform.TypeTooltipDesc.JsonOutput=Create Json bloc and output it in a field ou a file.
BaseTransform.TypeLongDesc.LDAPOutput=LDAP output
BaseTransform.TypeTooltipDesc.LDAPOutput=Perform Insert, upsert, update, add or delete operations on records based on their DN (Distinguished  Name).
BaseTransform.TypeLongDesc.StringOperations=String operations
BaseTransform.TypeTooltipDesc.StringOperations=Apply certain operations like trimming, padding and others to string value.
BaseTransform.TypeLongDesc.HiveTableOutput=Hive Table Output
BaseTransform.TypeTooltipDesc.HiveTableOutput=Insert data into a Hive table.
BaseTransform.TypeLongDesc.BlockUntilTransformsFinish=Block this transform until transforms finish
BaseTransform.TypeTooltipDesc.BlockUntilTransformsFinish=Block this transform until selected transforms finish.
BaseTransform.TypeLongDesc.TypeExitExcelWriterTransform=Microsoft Excel writer
BaseTransform.TypeTooltipDesc.TypeExitExcelWriterTransform=Writes or appends data to an Excel file
BaseTransform.TypeLongDesc.TransformsMetrics=Output transforms metrics
BaseTransform.TypeTooltipDesc.TransformsMetrics=Return metrics for one or several transforms
BaseTransform.Log.NumberFormatException={0} for the {1} transform is set to {2}.  It must be a number.
BaseTransform.Property.MaxErrors.Name=The maximum number of errors
BaseTransform.Property.MinRowsForErrorsPercentCalc.Name=Minimum number of rows to read before performing the "Max Percent Errors" calulation
BaseTransform.Property.MaxPercentErrors.Name=Maximum percent of errors
BaseTransform.TypeLongDesc.PrioritizeStreams=Prioritize streams
BaseTransform.TypeTooltipDesc.PrioritizeStreams=Prioritize streams in an order way.
BaseTransform.TypeLongDesc.VectorWiseBulkLoader=Ingres VectorWise bulk loader
BaseTransform.TypeTooltipDesc.VectorWiseBulkLoader=This transform interfaces with the Ingres VectorWise Bulk Loader "COPY TABLE" command.
BaseTransform.TypeLongDesc.Rest=REST client
BaseTransform.TypeTooltipDesc.Rest=Consume RESTfull services.\nREpresentational State Transfer (REST) is a key design idiom that embraces a stateless client-server\narchitecture in which the web services are viewed as resources and can be identified by their URLs
BaseTransform.Category.Palo=Palo
BaseTransform.TypeTooltipDesc.HopReportingOutput=Executes an existing report (PRPT)
BaseTransform.TypeLongDesc.HopReportingOutput=Hop reporting output
BaseTransform.TypeLongDesc.MongoDbInput=MongoDB input
BaseTransform.TypeTooltipDesc.MongoDbInput=Reads all entries from a MongoDB collection in the specified database.
BaseTransform.TypeLongDesc.SingleThreader=Single threader
BaseTransform.TypeTooltipDesc.SingleThreader=Executes a pipeline snippet in a single thread.  You need a standard mapping or a pipeline with an Injector transform where data from the parent pipeline will arive in blocks.
BaseTransform.TypeLongDesc.XMLInputStreamStAX=XML input stream (StAX)
BaseTransform.TypeTooltipDesc.XMLInputStreamStAX=This transform is capable of processing very large and complex XML files very fast.
BaseTransform.TypeLongDesc.GetSlaveSequence=Get ID from hop server
BaseTransform.TypeTooltipDesc.GetSlavesequence=Retrieves unique IDs in blocks from a hop server.  The referenced sequence needs to be configured on the hop server in the XML configuration file.
BaseTransform.TypeLongDesc.SymmetricCryptography=Symmetric cryptography
BaseTransform.TypeTooltipDesc.SymmetricCryptography=Encrypt or decrypt a string using symmetric encryption.\nAvailable algorithms are DES, AES, TripleDES.
BaseTransform.TypeLongDesc.SecretKeyGenerator=Secret key generator
BaseTransform.TypeTooltipDesc.SecretKeyGenerator=Generate secret key for algorithms such as DES, AES, TripleDES.
BaseTransform.TypeLongDesc.WorkflowExecutor=Workflow executor
BaseTransform.TypeTooltipDesc.WorkflowExecutor=This transform executes a Hop workflow, sets parameters and passes rows.
BaseTransform.TypeLongDesc.SASInput=SAS input
BaseTransform.TypeTooltipDesc.SASInput=This transform reads files in sas7bdat (SAS) native format
BaseTransform.TypeLongDesc.TableCompare=Table compare
BaseTransform.TypeTooltipDesc.TableCompare=Compares 2 tables and gives back a list of differences
BaseTransform.Category.Cryptography=Cryptography
BaseTransform.Category.BigData=Big Data
BaseTransform.Category.Streaming=Streaming
BaseTransform.Category.DataQuality=Data Quality
BaseTransform.TypeLongDesc.Edi2Xml=EDI to XML
BaseTransform.TypeTooltipDesc.Edi2Xml=Converts Edi text to generic XML
BaseTransform.TypeLongDesc.SFTPPut=SFTP put
BaseTransform.TypeTooltipDesc.SFTPPut=Upload a file or a stream file to remote host via SFTP
BaseTransformDialog.WizardConnectionButton.Label=Wizard...
BaseTransform.Log.LoadBalancingActivated=Load balancing activated
BaseTransform.Category.Agile=Agile
BaseTransform.Category.OpenERP=Open ERP
BaseTransform.Category.DataMining=Data Mining
BaseTransform.Category.BAServer=Hop Server
BaseTransform.TypeLongDesc.PipelineExecutor=Pipeline executor
BaseTransform.TypeTooltipDesc.PipelineExecutor=This transform executes a Hop pipeline, sets parameters and passes rows.
BaseTransform.TargetRowsetIsNotAvailable=Target rowset is not available for target partition, partitionNr = {0} 
BaseTransform.PartitionedToRow=Partitioned #{0}  to {1}, row={2}
BaseTransform.Log.UnableToRetrievePartitionId=Unable to retrieve a partition id from the partition schema: {0}
BaseTransform.Log.OpenedWriterSocketToRemoteTransform=Opened a writer socket to remote transform: {0}
BaseTransform.Log.ReleasedServerSocketOnPort=Released server socket on port {0}
BaseTransform.Log.RunningOnHopServer=Running on hop server #{0}/{1}.
BaseTransform.Log.OpenedServerSocketConnectionTo=Opened a server socket connection to {0}
BaseTransform.Log.SelectedRemoteOutputTransformToServer=Selected remote output transform [{0}] to open a server socket to remote transform [{1}].{2} on port {3}
BaseTransform.RowHandler.GetRowFromNotSupported=Getting row from a specified transform is not supported in this implementation:  {0}
BaseTransform.RowHandler.PutRowToNotSupported=Putting a row to specified transform is not supported in this implementation:  {0}
BaseTransform.TypeLongDesc.RScriptExecutor=R script executor
BaseTransform.TypeTooltipDesc.RScriptExecutor=Executes an R script
# common transform dialog messages
CommonTransformDialog.Button.GetFields=Get fields
CommonTransformDialog.TransformName.Label=Transform name:
CommonTransformDialog.PreviewSize.DialogTitle=Enter preview size
CommonTransformDialog.PreviewSize.DialogMessage=Enter the number of rows to preview\:
CommonTransformDialog.ErrorMessage.PreviewError.Title=Unable to preview rows
CommonTransformDialog.ErrorMessage.PreviewError.Message=Sorry, we weren''t able to get any rows for preview. {0}
CommonTransformDialog.ErrorMessage.GetFieldsError.Title=Unable to get fields
CommonTransformDialog.ErrorMessage.GetFieldsError.Message=Sorry, we weren''t able to get fields. {0}
CommonTransformDialog.WarningMessage.NoPreview.Title=No preview rows were found
CommonTransformDialog.WarningMessage.NoPreview.Message=We were unable to find any incoming preview rows.
CommonTransformDialog.WarningMessage.GetFieldsNoFields.Title=No fields were found
CommonTransformDialog.WarningMessage.GetFieldsNoFields.Message=We were unable to find any incoming fields.
# Transform Option
TransformOption.CheckResult.NotAInteger=The "{0}" value is invalid. Please set the value to an integer
TransformOption.CheckResult.NotABoolean=The "{0}" value is invalid. Please set the value to true or false
