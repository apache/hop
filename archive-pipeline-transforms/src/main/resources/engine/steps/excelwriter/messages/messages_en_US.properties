#
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#

ExcelWriterMetaInjection.AllFields=All the fields on the spreadsheet
ExcelWriterMetaInjection.FieldName=Input field name
ExcelWriterMetaInjection.FieldType=Type field value
ExcelWriterDialog.FormatXLSX.Label=xlsx [Excel 2007 and above]
ExcelWriterDialog.UseStyleCell.Column=Style from cell
ExcelWriterDialog.ProtectSheet.Tooltip=Lock the sheet for modification by setting a password
ExcelWriterDialog.MakeActiveSheet.Tooltip=If checked the output sheet is going to be the active sheet (i.e. first sheet you see when opening the document) in the file. If not checked any previously active sheet will continue to be the active sheet of the file.
ExcelWriterDialog.Password.Label=Password
ExcelWriterDialog.FormulaField.Column=field contains formula
ExcelWriterDialog.SplitEvery.Tooltip=Enter a positive number to create a new output file every ... data rows. The files will be numbered.
ExcelWriterDialog.IfFileExists.Reuse.Label=Use existing file for writing
ExcelWriterDialog.ProtectedBy.Tooltip=The name of the user protecting the sheet
ExcelWriterDialog.CommentAuthor.Column=Cell comment author (XLSX)
ExcelWriterDialog.RowWritingMethod.Label=When writing rows
ExcelWriterDialog.Header.Label=Write Header 
ExcelWriterDialog.writeToExistingGroup.Label=When writing to existing sheet
ExcelWriterDialog.Pad.Label=Right pad fields
ExcelWriterDialog.DateTimeFormat.Label=Date time format
ExcelWriterDialog.Filename.Label=Filename 
ExcelWriterDialog.Filename.Tooltip=This is the Excel filename that the rows will be written to
ExcelWriterDialog.NullIsBlank.Tooltip=If checked, NULL values will be preserved in your output. Otherwise, NULL values will be replaced with an empty string.
ExcelWriterDialog.fieldGroup.Label=Fields
ExcelWriterDialog.NoFilesFound.DialogMessage=No files found\!  Please check the filename/directory and options.
ExcelWriterDialog.ContentGroup.Label=Content options
ExcelOutput.Log.OpeningFile=Opening file [{0}] ...
ExcelWriterDialog.SkipRows.Label=Offset by ... rows
ExcelWriterDialog.SpecifyFormat.Label=Specify Date time format
ExcelWriterDialog.SelectOutputFiles.DialogTitle=Output files
ExcelWriterDialog.MinWidth.Button=\ &Minimal width 
ExcelWriterDialog.NullIsBlank.Label=Retain NULL values
ExcelWriterDialog.SpecifyFormat.Tooltip=Specify Date time format
ExcelWriterDialog.TemplateSheet.Tooltip=When a new output sheet is required and this is checked, the template sheet from below will be cloned instead of creating an empty sheet. A template sheet must not contain complex graphics or charts, as they may get lost or cause errors when cloned. Other content and formatting should be fine.  
ExcelWriterTransformMeta.CheckResult.AllFieldsFound=All output fields are found in the input stream.
ExcelWriterDialog.DoNotOpenNewFileInit.Tooltip=Check this if you don''t want to create file when the pipeline starts.\n PDI will create file at first row received.
ExcelWriterDialog.FormatXLS.Label=xls [Excel 97 and above]
ExcelWriterDialog.IfSheetExists.CreateNew.Label=replace with new sheet
ExcelWriterTransformMeta.CheckResult.FilesNotChecked=File specifications are not checked.
ExcelWriterDialog.Sheetname.Tooltip=The name of the sheet that will used for writing data.
ExcelWriterDialog.FileTab.TabTitle=File && Sheet
ExcelWriterDialog.RowWritingMethod.Tooltip=When writing rows you can choose to write into existing rows or to push down existing content down first. This may be useful when trying to preserve a custom footer from a template sheet for example.
ExcelWriterDialog.IfFileExists.Tooltip=Specifies what to do when the output file exists. You may choose to delete it and replace it with a fresh file or reuse the existing file for writing.  
ExcelWriterDialog.FieldsTab.TabTitle=Fields
ExcelWriterDialog.TypeColumn.Column=Type
ExcelWriterDialog.TemplateSheet.Label=Use template when creating new sheets
ExcelWriterDialog.AutoSize.Label=Auto size columns
ExcelWriterDialog.UseTitleStyleCell.Column=Header/Footer style from cell
ExcelWriterDialog.AutoSize.Tooltip=Automatically size all columns to largest value. This may be slow on large sheets. VMs in headless mode may have to define the java.awt.headless property\: System.setProperty("java.awt.headless", "true"); or java -Djava.awt.headless\=true in order for this to work.  
ExcelWriterTransform.Log.OpeningFile=Opening file [{0}] ...
ExcelWriterDialog.EmptyRows.Tooltip=When writing to an existing sheet you may choose to write a few empty lines first. This is useful if you want to append rows to an existing sheet, but offset them to clearly see the bounds of each generated block of rows.
ExcelWriterDialog.Template.Tooltip=When a new output file is required and this is checked, the template file from below will be copied instead of creating an empty file.  
ExcelWriterDialog.Append.Tooltip=If the file and the sheet exist,\n PDI will append. Otherwise, a new file and sheet will be created.
ExcelWriterDialog.Header.Tooltip=Writes the field names (or field titles if specified) as the first row of the output.
ExcelWriterDialog.IfFileExists.CreateNew.Label=replace with new output file
ExcelWriterDialog.sheetGroup.Label=Sheet
ExcelWriterDialog.Footer.Label=Write Footer 
ExcelWriterDialog.MakeActiveSheet.Label=Make this the active sheet
ExcelWriterDialog.IfSheetExists.Reuse.Label=write to existing sheet
ExcelWriterDialog.StartingCell.Label=Start writing at cell
ExcelWriterDialog.DoNotOpenNewFileInit.Label=Wait for first row before creating file
ExcelWriterDialog.AppendLines.Tooltip=If checked the output begins after the last defined row of the existing excel sheet 
ExcelWriterDialog.OmitHeader.Tooltip=You may choose to not write a header if you are writing to an existing sheet. This is useful if you want to generate new files with header, but do not want to repeat the header in subsequent runs, where you append to the same file.
ExcelWriterDialog.DialogTitle=Microsoft Excel writer
ExcelWriterDialog.SelectOutputFiles.DialogMessage=Output file(s)\:
ExcelWriterDialog.ShowFiles.Button=&Show filename(s)...
ExcelWriterDialog.TemplateFilename.Label=Template file
ExcelOutput.Log.FileClosed=File [{0}] was closed
ExcelWriterDialog.TitleColumn.Column=Field title
ExcelWriterTransformMeta.CheckResult.FieldsNotFound=Fields that were not found in input stream\:\n\n{0}
ExcelWriterDialog.Format.Label=Format 
ExcelWriterDialog.AddFileToResult.Label=Add filenames to result
ExcelWriterDialog.FormatColumn.Column=Format
ExcelOutput.Log.FileOpened=File [{0}] was opened
ExcelWriterDialog.ProtectSheet.Label=Protect sheet? (XLS format only)
ExcelWriterDialog.PrecisionColumn.Column=Precision
ExcelWriterTransform.Log.FileOpened=File [{0}] was opened.
ExcelWriterTransform.Log.SetDataFormat=Set the data format: [{0}] to the cell {1}{2}.
ExcelWriterTransformMeta.CheckResult.ExpectedInputError=No input received from other transforms\!
ExcelWriterDialog.GroupColumn.Column=Group
ExcelWriterDialog.Separator.Label=Separator 
ExcelWriterTransform.Log.TemplateMissing=We can not find template file [{0}]\!
ExcelWriterDialog.EmptyRows.Label=Begin by writing ... empty lines
ExcelWriterDialog.HyperLinkField.Column=Hyperlink
ExcelWriterTransform.Log.CouldNotDeleteStaleFile=Could not delete stale file [{0}]\!
ExcelWriterDialog.IfSheetExists.Label=If sheet exists in output file
ExcelWriterDialog.Sheetname.Label=Sheet name (max. 31 characters)
ExcelWriterDialog.NullColumn.Column=Null
ExcelWriterDialog.RowWritingMethod.Overwrite.Label=overwrite existing cells
ExcelWriterDialog.Footer.Tooltip=Writes the field names (or field titles if specified) as the last row of the output.
ExcelWriterDialog.ProtectedBy.Label=Protected by user
ExcelWriterDialog.StartingCell.Tooltip=Enter cell reference to start writing at, i.e. B2
ExcelWriterDialog.ContentTab.TabTitle=Content
ExcelWriterDialog.IfSheetExists.Tooltip=If the sheet exists in the file you may choose to delete it and replace it with a fresh sheet or reuse the existing sheet for writing.
ExcelWriterDialog.Encoding.Label=Encoding 
ExcelWriterDialog.Extension.Tooltip=This is the file extension of the Excel file. It also implies the file format. 
ExcelWriterDialog.RowWritingMethod.PushDown.Label=shift existing cells down
ExcelWriterDialog.Enclosure.Label=Enclosure 
ExcelWriterDialog.fileGroup.Label=File
ExcelWriterDialog.NameColumn.Column=Name
ExcelWriterDialog.Password.Tooltip=Password to protect the sheet
ExcelWriterDialog.Template.Label=Use template when creating new files
ExcelWriterDialog.TemplateGroup.Label=Template
ExcelWriterDialog.ForceFormulaRecalculation.Tooltip=Check this if you want Hop to evaluate all of the workbook formulas when done. This is useful if you find that Excel is displaying cached (and thus wrong) values in formula fields. 
ExcelWriterDialog.IfFileExists.Label=If output file exists
ExcelWriterDialog.SkipRows.Tooltip=You can choose to move the starting output row by a positive or negative number. It may be useful to specify a negative offset if you want to append to an existing sheet, but keep existing custom footer lines at the bottom of the sheet. 
ExcelWriterDialog.AddTransformnr.Label=Include transform nr in filename? 
ExcelWriterDialog.OmitHeader.Label=Omit header
ExcelWriterDialog.AddFileToResult.Tooltip=Check this if you wan to add filenames to result filenames.
ExcelWriterDialog.AddTime.Label=Include time in filename? 
ExcelWriterDialog.CommentField.Column=Cell comment (XLSX)
ExcelWriterDialog.AddDate.Label=Include date in filename?
ExcelWriterDialog.SplitEvery.Label=Split every ... data rows
ExcelWriterDialog.MinWidth.Tooltip=Sets the output to non-padded width.
ExcelWriterTransformMeta.CheckResult.ExpectedInputOk=Transform is receiving info from other transforms.
ExcelWriterDialog.TemplateSheetname.Label=Template sheet
ExcelWriterDialog.LeaveExistingStylesUnchanged.Tooltip=This setting will leave all styles of existing cells in your template alone. This can be useful if you got specifically preformatted area in your sheet where you just want to replace the data, leaving all style information unchanged (like borders, background color etc.).
ExcelWriterDialog.Append.Label=Append lines if file and sheet exist
ExcelWriterDialog.ForceFormulaRecalculation.Label=Force formula recalculation
ExcelWriterDialog.AppendLines.Label=Start writing at end of sheet (appending lines)
ExcelWriterTransformMeta.CheckResult.FieldsReceived=Transform is connected to previous one, receiving {0} fields
ExcelWriterDialog.LengthColumn.Column=Length
ExcelWriterDialog.LeaveExistingStylesUnchanged.Label=Leave styles of existing cells unchanged
ExcelWriterDialog.EndedLine.Label=Add Ending line of file 
ExcelWriterDialog.StreamData.Label=Stream XSLX data
ExcelWriterTransform.Exception.MaxSheetName=Sheet name exceeds 31 character: {0}
ExcelWriterTransform.Exception.TemplateNotFound=Template Sheet: {0} not found, aborting
ExcelWriterTransform.Exception.CouldNotPrepareFile=Could not prepare output file {0}
ExcelWriterDialog.TemplateSheetHide.Label=Hide Template Sheet
ExcelWriterDialog.TemplateSheetHide.Tooltip=Ensure that the template sheet will be hidden
