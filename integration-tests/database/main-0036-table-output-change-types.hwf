<?xml version="1.0" encoding="UTF-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<workflow>
  <name>main-0036-table-output-change-types</name>
  <name_sync_with_filename>Y</name_sync_with_filename>
  <description>Test automatic column type changes - Phase 4</description>
  <extended_description/>
  <workflow_version/>
  <created_user>-</created_user>
  <created_date>2025/10/25 11:30:00.000</created_date>
  <modified_user>-</modified_user>
  <modified_date>2025/10/25 11:30:00.000</modified_date>
  <parameters>
    </parameters>
  <actions>
    <action>
      <name>Start</name>
      <description/>
      <type>SPECIAL</type>
      <attributes/>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <xloc>64</xloc>
      <yloc>48</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>Drop test table</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>
DROP TABLE IF EXISTS public.table_change_types_test;
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>unit-test-db</connection>
      <parallel>N</parallel>
      <xloc>262</xloc>
      <yloc>48</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>Create initial table with VARCHAR age</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>
CREATE TABLE public.table_change_types_test
(
    id INTEGER,
    age VARCHAR(50),  -- Will be changed to INTEGER
    name VARCHAR(100)
);

-- Note: Not inserting initial data because changing column types
-- with existing data requires type casting which is database-specific
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>unit-test-db</connection>
      <parallel>N</parallel>
      <xloc>460</xloc>
      <yloc>48</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>0033-table-output-change-types.hpl</name>
      <description/>
      <type>PIPELINE</type>
      <attributes/>
      <filename>${PROJECT_HOME}/0033-table-output-change-types.hpl</filename>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <create_parent_folder>N</create_parent_folder>
      <run_configuration>local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <xloc>658</xloc>
      <yloc>48</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>Check 50 rows inserted</name>
      <description/>
      <type>EVAL_TABLE_CONTENT</type>
      <attributes/>
      <connection>unit-test-db</connection>
      <schemaname>public</schemaname>
      <tablename>table_change_types_test</tablename>
      <success_condition>rows_count_equal</success_condition>
      <limit>50</limit>
      <is_custom_sql>N</is_custom_sql>
      <is_usevars>N</is_usevars>
      <custom_sql/>
      <add_rows_result>N</add_rows_result>
      <clear_result_rows>Y</clear_result_rows>
      <parallel>N</parallel>
      <xloc>856</xloc>
      <yloc>48</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>Verify age column is now INTEGER</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>
-- Check that age column data type changed from VARCHAR to INTEGER
-- This query should return 'integer' or similar type name
SELECT data_type 
FROM information_schema.columns 
WHERE table_schema = 'public' 
  AND table_name = 'table_change_types_test'
  AND column_name = 'age';
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>unit-test-db</connection>
      <parallel>N</parallel>
      <xloc>1056</xloc>
      <yloc>48</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>Verify integer values work</name>
      <description/>
      <type>EVAL_TABLE_CONTENT</type>
      <attributes/>
      <connection>unit-test-db</connection>
      <schemaname>public</schemaname>
      <tablename>table_change_types_test</tablename>
      <success_condition>rows_count_equal</success_condition>
      <limit>50</limit>
      <is_custom_sql>N</is_custom_sql>
      <is_usevars>N</is_usevars>
      <custom_sql/>
      <add_rows_result>N</add_rows_result>
      <clear_result_rows>Y</clear_result_rows>
      <parallel>N</parallel>
      <xloc>1248</xloc>
      <yloc>48</yloc>
      <attributes_hac/>
    </action>
    <action>
      <name>Cleanup test table</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>
DROP TABLE IF EXISTS public.table_change_types_test;
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>unit-test-db</connection>
      <parallel>N</parallel>
      <xloc>1248</xloc>
      <yloc>192</yloc>
      <attributes_hac/>
    </action>
  </actions>
  <hops>
    <hop>
      <from>Start</from>
      <to>Drop test table</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Drop test table</from>
      <to>Create initial table with VARCHAR age</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Create initial table with VARCHAR age</from>
      <to>0033-table-output-change-types.hpl</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>0033-table-output-change-types.hpl</from>
      <to>Check 50 rows inserted</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Check 50 rows inserted</from>
      <to>Verify age column is now INTEGER</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Verify age column is now INTEGER</from>
      <to>Verify integer values work</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Verify integer values work</from>
      <to>Cleanup test table</to>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes/>
</workflow>

