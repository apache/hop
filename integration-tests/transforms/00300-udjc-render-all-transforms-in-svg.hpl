<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>00300-udjc-render-all-transforms-in-svg</name>
    <name_sync_with_filename>Y</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <parameters>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2020/12/18 21:55:25.542</created_date>
    <modified_user>-</modified_user>
    <modified_date>2020/12/18 21:55:25.542</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>SVG of all transforms</from>
      <to>/tmp/transforms.svg</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>1 row</from>
      <to>SVG of all transforms</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <transform>
    <name>/tmp/transforms.svg</name>
    <type>TextFileOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <separator/>
    <enclosure/>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>N</header>
    <footer>N</footer>
    <format>UNIX</format>
    <compression>None</compression>
    <encoding>UTF-8</encoding>
    <endedLine/>
    <fileNameInField>N</fileNameInField>
    <fileNameField/>
    <create_parent_folder>Y</create_parent_folder>
    <file>
      <name>/tmp/transforms</name>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>N</do_not_open_new_file_init>
      <extention>svg</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <add_to_result_filenames>Y</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>N</fast_dump>
      <splitevery/>
    </file>
    <fields>
      <field>
        <name>svg</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>both</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>560</xloc>
      <yloc>112</yloc>
    </GUI>
  </transform>
  <transform>
    <name>1 row</name>
    <type>RowGenerator</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
    </fields>
    <limit>1</limit>
    <never_ending>N</never_ending>
    <interval_in_ms>5000</interval_in_ms>
    <row_time_field>now</row_time_field>
    <last_time_field>FiveSecondsAgo</last_time_field>
    <attributes/>
    <GUI>
      <xloc>224</xloc>
      <yloc>112</yloc>
    </GUI>
  </transform>
  <transform>
    <name>SVG of all transforms</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <definitions>
      <definition>
        <classType>TRANSFORM_CLASS</classType>
        <className>Processor</className>
        <class_source>import org.apache.hop.core.plugins.IPlugin;
import org.apache.hop.core.plugins.PluginRegistry;
import org.apache.hop.core.plugins.TransformPluginType;
import org.apache.hop.pipeline.PipelineMeta;
import org.apache.hop.pipeline.transform.ITransformMeta;
import org.apache.hop.pipeline.transform.TransformMeta;
import org.apache.hop.pipeline.PipelineSvgPainter;
import java.util.List;
import org.apache.hop.core.variables.IVariables;
import org.apache.hop.core.variables.Variables;

public boolean processRow() throws HopException
{
    // We expect exactly 1 input row
    //
	Object[] r = getRow();

	PluginRegistry registry = PluginRegistry.getInstance();
	List&lt;IPlugin> plugins = registry.getPlugins(TransformPluginType.class);

	PipelineMeta pipelineMeta = new PipelineMeta();

	int x = 50;
    int y = 50;
    for (IPlugin plugin : plugins) {
      ITransformMeta iTransformMeta = (ITransformMeta) registry.loadClass( plugin );

      TransformMeta transformMeta = new TransformMeta(plugin.getName(), iTransformMeta);
      transformMeta.setLocation( x, y );
      pipelineMeta.addTransform( transformMeta );

      x+=150;
      if (x>1600) {
        y+=100;
        x=50;
      }
    }

    // Now render this pipeline...
    //
    String svgXml = PipelineSvgPainter.generatePipelineSvg( pipelineMeta, 1f, getParent() );
		

    // First, get a row from the default input hop
    //
    Object[] outputRow = createOutputRow(r, data.outputRowMeta.size());
    outputRow[0] = svgXml;

	putRow(data.outputRowMeta, outputRow);

	setOutputDone();

    return false;
}</class_source>
      </definition>
    </definitions>
    <fields>
      <field>
        <fieldName>svg</fieldName>
        <fieldType>String</fieldType>
        <fieldLength>-1</fieldLength>
        <fieldPrecision>-1</fieldPrecision>
      </field>
    </fields>
    <clearResultFields>Y</clearResultFields>
    <infoTransforms/>
    <target_transforms/>
    <usage_parameters/>
    <attributes/>
    <GUI>
      <xloc>384</xloc>
      <yloc>112</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes/>
</pipeline>
